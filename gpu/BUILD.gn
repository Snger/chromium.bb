# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# GYP-to-GN project mappings:
#
#  gpu.gyp:command_buffer_client => //gpu/command_buffer/client
#
#  gpu.gyp:command_buffer_common => //gpu/command_buffer/common
#
#  gpu.gyp:command_buffer_service => //gpu/command_buffer/service

#  gpu/gpu.gyp:gl_in_process_context =>
#      //gpu/command_buffer/client:gl_in_process_context
#
#  gpu.gyp:gles2_cmd_helper => //gpu/command_buffer/client:gles2_cmd_helper
#
#  gpu.gyp:gles2_c_lib => //gpu/command_buffer/client:gles2_c_lib
#
#  gpu.gyp:gles2_implementation =>
#      //gpu/command_buffer/client:gles2_implementation

#  gpu.gyp:gles2_implementation_client_side_arrays =>
#      //gpu/command_buffer/client:gles2_implementation_client_side_arrays
#
#  gpu.gyp:gpu_config => //gpu/config
#
#  gpu.gyp:gpu_ipc => //gpu/ipc
#
#  gpu.gyp:disk_cache_proto => //gpu/command_buffer/service:disk_cache_proto
#
#  command_buffer/command_buffer.gyp:gles2_utils =>
#     //gpu/command_buffer/common
#     (Merged in to here because the separate file exists in GYP only to break
#     a .gyp file dependency cycle which GN doesn't have.)

component("gpu") {
  deps = [
    "//gpu/command_buffer/client",
    "//gpu/command_buffer/common",
    "//gpu/command_buffer/service",
    "//gpu/command_buffer/client:gles2_cmd_helper",
    "//gpu/config",
    "//gpu/ipc",
  ]
}

source_set("gpu_unittest_utils") {
  sources = [
    "command_buffer/service/gles2_cmd_decoder_mock.cc",
    "command_buffer/service/error_state_mock.cc",
    "command_buffer/client/gles2_interface_stub.cc",
    "command_buffer/client/gles2_interface_stub.h",
  ]

  configs += [ "//third_party/khronos:khronos_headers" ]

  deps = [
    ":gpu",
    "//testing/gmock",
    "//testing/gtest",
    "//ui/gl:gl_unittest_utils",
  ]
}

# TODO(GYP) This doesn't link yet.
if (false) {
test("gl_tests") {
  sources = [
    "command_buffer/tests/compressed_texture_test.cc",
    "command_buffer/tests/gl_bind_uniform_location_unittest.cc",
    "command_buffer/tests/gl_chromium_framebuffer_multisample_unittest.cc",
    "command_buffer/tests/gl_copy_texture_CHROMIUM_unittest.cc",
    "command_buffer/tests/gl_depth_texture_unittest.cc",
    "command_buffer/tests/gl_gpu_memory_buffer_unittest.cc",
    "command_buffer/tests/gl_lose_context_chromium_unittest.cc",
    "command_buffer/tests/gl_manager.cc",
    "command_buffer/tests/gl_manager.h",
    "command_buffer/tests/gl_pointcoord_unittest.cc",
    "command_buffer/tests/gl_program_unittest.cc",
    "command_buffer/tests/gl_query_unittest.cc",
    "command_buffer/tests/gl_readback_unittest.cc",
    "command_buffer/tests/gl_shared_resources_unittest.cc",
    "command_buffer/tests/gl_stream_draw_unittest.cc",
    "command_buffer/tests/gl_test_utils.cc",
    "command_buffer/tests/gl_test_utils.h",
    "command_buffer/tests/gl_tests_main.cc",
    "command_buffer/tests/gl_texture_mailbox_unittest.cc",
    "command_buffer/tests/gl_texture_storage_unittest.cc",
    "command_buffer/tests/gl_unittest.cc",
    "command_buffer/tests/gl_unittests_android.cc",
    "command_buffer/tests/gl_virtual_contexts_unittest.cc",
    "command_buffer/tests/occlusion_query_unittest.cc",
  ]

  defines = [
    "GLES2_C_LIB_IMPLEMENTATION",
    "GL_GLEXT_PROTOTYPES",
  ]

  deps = [
    ":gpu",
    ":gpu_unittest_utils",
    "//base",
    "//base/third_party/dynamic_annotations",
    "//testing/gmock",
    "//testing/gtest",
    # TODO(GYP)
    #"<(angle_path)/src/build_angle.gyp:translator",
    "//ui/gfx",
    "//ui/gfx/geometry",
    "//ui/gl",
    #"//gpu/command_buffer/client",  # These are all part of //gpu, needed?
    #"//gpu/command_buffer/common",
    #"//gpu/command_buffer/service",
    #"//gpu/command_buffer/client:gles2_cmd_helper",
    "//gpu/command_buffer/client:gles2_c_lib",
    "//gpu/command_buffer/client:gles2_implementation_client_side_arrays",
  ]

  # TODO(GYP)
  #     ['OS == "android"', {
  #       'dependencies': [
  #         '../testing/android/native_test.gyp:native_test_native_code',
  #       ],
  #     }],
  #     ['OS == "win"', {
  #       'dependencies': [
  #         '../third_party/angle/src/build_angle.gyp:libEGL',
  #         '../third_party/angle/src/build_angle.gyp:libGLESv2',
  #       ],
  #     }],
}
}  # if (false)

# TODO(GYP)
#  gl_tests_apk
#  gpu_unittests_apk
