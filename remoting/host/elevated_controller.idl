// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import "oaidl.idl";
import "ocidl.idl";

[
  object,
  uuid(e6c5f02a-2486-4bf0-b13f-f39be260b917),
  dual,
  nonextensible,
  helpstring("IDaemonControl Interface"),
  pointer_default(unique)
]
interface IDaemonControl: IDispatch {
  [ id(1), helpstring("Deprecated.") ]
  HRESULT GetConfig([out, retval] BSTR* config_out);

  [ id(2), helpstring("Replaces the existing daemon's configuration with "
                      "the specified settings.") ]
  HRESULT SetConfig([in] BSTR config);

  [ id(3), helpstring("Starts the daemon.") ]
  HRESULT StartDaemon();

  [ id(4), helpstring("Stops the daemon.") ]
  HRESULT StopDaemon();

  [ id(5), helpstring("Modifies the existing daemon's configuration by "
                      "merging it with the specified settings. The 'host_id' "
                      "and 'xmpp_login' values cannot be modified, and must "
                      "not be passed to this method.") ]
  HRESULT UpdateConfig([in] BSTR config);
};

[
  object,
  uuid(d8cc6ebc-df7a-447b-b582-21b7174afb3a),
  dual,
  nonextensible,
  helpstring("IDaemonControlUi Interface"),
  pointer_default(unique)
]
interface IDaemonControlUi: IDaemonControl {
  [ id(6), helpstring("Sets the owner window for any windows shown by "
                      "the daemon controller.") ]
  HRESULT SetOwnerWindow([in] LONG_PTR owner_window);
};

[
  uuid(9d9a5a2c-576e-4acd-9c75-aabff74b205d),
  version(1.0),
  helpstring("Chromoting Elevated Controller 1.0 Type Library")
]
library ChromotingElevatedControllerLib {
  importlib("stdole2.tlb");

  [
    uuid(430a9403-8176-4733-afdc-0b325a8fda84),
    helpstring("ElevatedController Class")
  ]
  coclass ElevatedController {
    [default] interface IDaemonControlUi;
  };
};
