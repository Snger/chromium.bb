diff -ur elfutils-0.153.pnacl/libelf/elf32_updatefile.c elfutils-0.153.mem/libelf/elf32_updatefile.c
--- elfutils-0.153.pnacl/libelf/elf32_updatefile.c	2012-03-08 11:41:00.111790242 -0800
+++ elfutils-0.153.mem/libelf/elf32_updatefile.c	2012-03-08 22:55:14.847047383 -0800
@@ -311,27 +311,24 @@
 	  Elf_Data_List *dl = &scn->data_list;
 	  bool scn_changed = false;
 
-	  void fill_mmap (size_t offset)
-	  {
-	    size_t written = 0;
-
-	    if (last_position < shdr_start)
-	      {
-		written = MIN (scn_start + offset - last_position,
-			       shdr_start - last_position);
-
-		memset (last_position, __libelf_fill_byte, written);
-	      }
-
-	    if (last_position + written != scn_start + offset
-		&& shdr_end < scn_start + offset)
-	      {
-		char *fill_start = MAX (shdr_end, scn_start);
-		memset (fill_start, __libelf_fill_byte,
-			scn_start + offset - fill_start);
-	      }
-	  }
-
+#define fill_mmap(offset) \
+do { \
+	    size_t written = 0; \
+	    if (last_position < shdr_start) \
+	      { \
+		written = MIN (scn_start + offset - last_position, \
+			       shdr_start - last_position); \
+		memset (last_position, __libelf_fill_byte, written); \
+	      } \
+	    if (last_position + written != scn_start + offset \
+		&& shdr_end < scn_start + offset) \
+	      { \
+		char *fill_start = MAX (shdr_end, scn_start); \
+		memset (fill_start, __libelf_fill_byte, \
+			scn_start + offset - fill_start); \
+	      } \
+} while (0)
+/////////////////////////////////////////////////////////
 	  if (scn->data_list_rear != NULL)
 	    do
 	      {
diff -ur elfutils-0.153.pnacl/libelf/elf_begin.c elfutils-0.153.mem/libelf/elf_begin.c
--- elfutils-0.153.pnacl/libelf/elf_begin.c	2012-03-08 11:41:00.111790242 -0800
+++ elfutils-0.153.mem/libelf/elf_begin.c	2012-03-08 15:19:35.577978608 -0800
@@ -1021,7 +1021,8 @@
   if (ref != NULL)
     /* Make sure the descriptor is not suddenly going away.  */
     rwlock_rdlock (ref->lock);
-  else if (unlikely (fcntl (fildes, F_GETFL) == -1 && errno == EBADF))
+  else if (cmd != ELF_C_WRITE_MEM &&
+           unlikely (fcntl (fildes, F_GETFL) == -1 && errno == EBADF))
     {
       /* We cannot do anything productive without a file descriptor.  */
       __libelf_seterrno (ELF_E_INVALID_FILE);
@@ -1082,6 +1083,7 @@
 
     case ELF_C_WRITE:
     case ELF_C_WRITE_MMAP:
+    case ELF_C_WRITE_MEM:
       /* We ignore REF and prepare a descriptor to write a new file.  */
       retval = write_file (fildes, cmd);
       break;
diff -ur elfutils-0.153.pnacl/libelf/elf_end.c elfutils-0.153.mem/libelf/elf_end.c
--- elfutils-0.153.pnacl/libelf/elf_end.c	2012-03-08 11:41:00.111790242 -0800
+++ elfutils-0.153.mem/libelf/elf_end.c	2012-03-08 13:26:53.924973626 -0800
@@ -239,7 +239,8 @@
       break;
     }
 
-  if (elf->map_address != NULL && parent == NULL)
+  if (elf->cmd != ELF_C_WRITE_MEM &&
+      elf->map_address != NULL && parent == NULL)
     {
       /* The file was read or mapped for this descriptor.  */
       if ((elf->flags & ELF_F_MALLOCED) != 0)
diff -ur elfutils-0.153.pnacl/libelf/elf_update.c elfutils-0.153.mem/libelf/elf_update.c
--- elfutils-0.153.pnacl/libelf/elf_update.c	2010-09-29 08:07:37.000000000 -0700
+++ elfutils-0.153.mem/libelf/elf_update.c	2012-03-08 23:39:12.204984013 -0800
@@ -59,6 +59,25 @@
 
 #include "libelfP.h"
 
+static off_t
+write_mem (Elf *elf, off_t size, int change_bo, size_t shnum)
+{
+  int class = elf->class;
+
+  elf->map_address = malloc(size);
+
+  /* The file is mmaped.  */
+  if ((class == ELFCLASS32 ? __elf32_updatemmap (elf, change_bo, shnum)
+                           : __elf64_updatemmap (elf, change_bo, shnum)) != 0)
+    /* Some problem while writing.  */
+    size = -1;
+
+  if (size != -1 && elf->parent == NULL)
+    elf->maximum_size = size;
+
+  return size;
+}
+
 
 static off_t
 write_file (Elf *elf, off_t size, int change_bo, size_t shnum)
@@ -159,6 +178,7 @@
 
   if (cmd != ELF_C_NULL
       && cmd != ELF_C_WRITE
+      && cmd != ELF_C_WRITE_MEM
       && unlikely (cmd != ELF_C_WRITE_MMAP))
     {
       __libelf_seterrno (ELF_E_INVALID_CMD);
@@ -197,22 +217,26 @@
 	  : __elf64_updatenull_wrlock (elf, &change_bo, shnum));
   if (likely (size != -1)
       /* See whether we actually have to write out the data.  */
-      && (cmd == ELF_C_WRITE || cmd == ELF_C_WRITE_MMAP))
+      && (cmd == ELF_C_WRITE || cmd == ELF_C_WRITE_MMAP || cmd == ELF_C_WRITE_MEM))
     {
       if (elf->cmd != ELF_C_RDWR
 	  && elf->cmd != ELF_C_RDWR_MMAP
 	  && elf->cmd != ELF_C_WRITE
+          && elf->cmd != ELF_C_WRITE_MEM
 	  && unlikely (elf->cmd != ELF_C_WRITE_MMAP))
 	{
 	  __libelf_seterrno (ELF_E_UPDATE_RO);
 	  size = -1;
 	}
-      else if (unlikely (elf->fildes == -1))
+      else if (elf->cmd != ELF_C_WRITE_MEM &&
+               unlikely (elf->fildes == -1))
 	{
 	  /* We closed the file already.  */
 	  __libelf_seterrno (ELF_E_FD_DISABLED);
 	  size = -1;
 	}
+      else if (elf->cmd == ELF_C_WRITE_MEM)
+        size = write_mem (elf, size, change_bo, shnum);
       else
 	size = write_file (elf, size, change_bo, shnum);
     }
diff -ur elfutils-0.153.pnacl/libelf/libelf.h elfutils-0.153.mem/libelf/libelf.h
--- elfutils-0.153.pnacl/libelf/libelf.h	2012-03-08 11:41:00.111790242 -0800
+++ elfutils-0.153.mem/libelf/libelf.h	2012-03-08 11:49:38.394901864 -0800
@@ -127,6 +127,7 @@
   ELF_C_READ_MMAP,		/* Read, but mmap the file if possible.  */
   ELF_C_RDWR_MMAP,		/* Read and write, with mmap.  */
   ELF_C_WRITE_MMAP,		/* Write, with mmap.  */
+  ELF_C_WRITE_MEM,		/* Write to a memory region  */
   ELF_C_READ_MMAP_PRIVATE,	/* Read, but memory is writable, results are
 				   not written to the file.  */
   ELF_C_EMPTY,			/* Copy basic file data but not the content. */
