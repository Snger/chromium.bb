# Copyright 2011 The Native Client Authors.  All rights reserved.
# Use of this source code is governed by a BSD-style license that can
# be found in the LICENSE file.
#

# simple example that tries to build a mostly sandboxed shared lib
# which is then loaded by a regular (non-sandboxed) images

PNACL_ROOT=../../toolchain/pnacl_linux_x86_64
PNACL_CC=$(PNACL_ROOT)/bin/pnacl-gcc
PNACL_LD=$(PNACL_ROOT)/bin/pnacl-ld
ELF_PATCHER=../../tools/elf_patcher.py

ARM_CC=../../toolchain/linux_arm-trusted/arm-2009q3/bin/arm-none-linux-gnueabi-gcc
QEMU= ../../toolchain/linux_arm-trusted/qemu_tool.sh run

# NOTE: built this using: 
# ./scons platform=x86-32 ncval
NCVAL_X86_32=../../scons-out/opt-linux-x86-32/staging/ncval
# NOTE: built this using: 
# ./scons buildplatform=x86-64 targetplatform=arm  arm-ncval-core
NCVAL_ARM=../../scons-out/opt-linux-x86-64-to-arm/staging/arm-ncval-core
#DEBUG_FLAGS= --pnacl-driver-verbose --pnacl-driver-debug
DEBUG_FLAGS=

######################################################################
# tools needed
######################################################################
preparation:
	cd ../.. ; ./scons MODE=opt-linux buildplatform=x86-64 targetplatform=arm arm-ncval-core
	cd ../.. ; ./scons MODE=opt-linux platform=x86-32 ncval
######################################################################
# Platform neutral
######################################################################

hello.bc:  hello.c
	$(PNACL_CC)  -c -fPIC -I../../.. $(DEBUG_FLAGS) -o $@ $^


fortytwo.bc:  fortytwo.c
	$(PNACL_CC)  -c -fPIC -I../../.. $(DEBUG_FLAGS) -o $@ $^

hello2.bc:  hello2.c
	$(PNACL_CC)  -c -fPIC -I../../.. $(DEBUG_FLAGS) -o $@ $^


fortytwo2.bc:  fortytwo2.c
	$(PNACL_CC)  -c -fPIC -I../../.. $(DEBUG_FLAGS) -o $@ $^

######################################################################
LD_X86_ARGS= --pnacl-driver-set-LD_SCRIPT_X8632=ld_script_x86_32_shared
LLC_X86_ARGS= --add-llc-option -sfi-x86-jmp-mask=-1 
X86_FLAGS= $(DEBUG_FLAGS) $(LD_X86_ARGS) $(LLC_X86_ARGS)

# mostly sandboxed
libsimple1.x86-32.so: hello.bc fortytwo.bc
	$(PNACL_LD) -shared -fPIC  -arch x86-32 $(X86_FLAGS) -o $@ $^
	# TODO(robertm): enable this once ncval has been fixed
	#	$(NCVAL_X86_32) $@
	$(ELF_PATCHER) -l $@	

# mostly sandboxed
libsimple2.x86-32.so: hello2.bc fortytwo2.bc
	$(PNACL_LD) -shared -fPIC  -arch x86-32 $(X86_FLAGS) -o $@ $^
	# TODO(robertm): enable this once ncval has been fixed
	# $(NCVAL_X86_32) $@
	$(ELF_PATCHER) -l $@	

# *not* sanboxed
main.x86-32: main.c libsimple1.x86-32.so 
	gcc -m32 -o $@ -L. -lsimple1.x86-32 main.c

main2.x86-32: main.c libsimple1.x86-32.so libsimple2.x86-32.so
	gcc -m32 -o $@ -L. -lsimple1.x86-32 -lsimple2.x86-32 main2.c

run.x86-32: main.x86-32 
	LD_LIBRARY_PATH=. ./main.x86-32
	echo "success"

run2.x86-32: main2.x86-32 
	LD_LIBRARY_PATH=. ./main2.x86-32
	echo "success"

######################################################################
LD_ARM_ARGS= --pnacl-driver-set-WHICH_LD=GOLD  --pnacl-driver-set-MC_DIRECT=0
# http://code.google.com/p/nativeclient/issues/detail?id=1531
# uncomment this for BFD linking
#LD_ARM_ARGS= --pnacl-driver-set-LD_SCRIPT_ARM=ld_script_arm_shared --pnacl-driver-set-MC_DIRECT=0
LLC_ARM_ARGS= --add-llc-option -sfi-zero-mask
ARM_FLAGS= $(DEBUG_FLAGS) $(LD_ARM_ARGS) $(LLC_ARM_ARGS)

# mostly sandboxed
libsimple1.arm.so: hello.bc fortytwo.bc
	$(PNACL_LD) -shared -fPIC  -arch arm $(ARM_FLAGS) -o $@ $^
	$(NCVAL_ARM) --zero-masks $@
	$(ELF_PATCHER) -l $@

# mostly sandboxed
libsimple2.arm.so: hello2.bc fortytwo2.bc
	$(PNACL_LD) -shared -fPIC  -arch arm $(ARM_ARGS) -o $@ $^
	$(NCVAL_ARM) --zero-masks $@
	$(ELF_PATCHER) -l $@

# *not* sanboxed
main.arm: main.c libsimple1.arm.so 
	$(ARM_CC)  -Wl,-Ttext-segment=20000 -o $@ -L. -lsimple1.arm  main.c

main2.arm: main.c libsimple1.arm.so libsimple2.arm.so
	$(ARM_CC)  -Wl,-Ttext-segment=20000 -o $@ -L. -lsimple1.arm  -lsimple2.arm main.c


run.arm: main.arm
	LD_LIBRARY_PATH=. $(QEMU) ./main.arm
	echo "success"

run2.arm: main2.arm
	LD_LIBRARY_PATH=. $(QEMU) ./main2.arm
	echo "success"
######################################################################

clean:
	rm -f *.bc *.o *.ll *.so main

