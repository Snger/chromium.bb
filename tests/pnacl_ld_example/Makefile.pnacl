# Copyright (c) 2011 The Native Client Authors.  All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# simple example that tries to build a mostly sandboxed shared lib
# which is then loaded by a regular (non-sandboxed) images

PNACL_ROOT=../../toolchain/pnacl_linux_x86_64_glibc
PNACL_CC=$(PNACL_ROOT)/bin/pnacl-clang
PNACL_LD=$(PNACL_ROOT)/bin/pnacl-ld

ARM_CC=arm-linux-gnueabi-gcc-4.5
QEMU= ../../toolchain/linux_arm-trusted/qemu_tool.sh run

# NOTE: built this using:
# ./scons targetplatform=arm  arm-ncval-core
NCVAL_ARM=../../scons-out/opt-linux-x86-32-to-arm/staging/arm-ncval-core
#DEBUG_FLAGS= --pnacl-driver-verbose --pnacl-driver-debug
DEBUG_FLAGS=

######################################################################
# tools needed
######################################################################
preparation.arm:
	cd ../.. ; ./scons MODE=opt-linux targetplatform=arm arm-ncval-core

######################################################################
# Platform neutral
######################################################################

hello.bc:  hello.c
	$(PNACL_CC)  -c -fPIC -I../../.. $(DEBUG_FLAGS) -o $@ $^


fortytwo.bc:  fortytwo.c
	$(PNACL_CC)  -c -fPIC -I../../.. $(DEBUG_FLAGS) -o $@ $^

hello2.bc:  hello2.c
	$(PNACL_CC)  -c -fPIC -I../../.. $(DEBUG_FLAGS) -o $@ $^


fortytwo2.bc:  fortytwo2.c
	$(PNACL_CC)  -c -fPIC -I../../.. $(DEBUG_FLAGS) -o $@ $^

######################################################################
LD_ARM_ARGS= -T ld_script_arm_shared --pnacl-allow-native
LLC_ARM_ARGS= --add-translate-option=-sfi-zero-mask
ARM_FLAGS= $(DEBUG_FLAGS) $(LD_ARM_ARGS) $(LLC_ARM_ARGS)

# mostly sandboxed
# NOTE: we need to clear out byte 7 (EI_OSABI) and 8 (EI_ABIVERSION)
#       of the elf header to make it compatible with the ubuntu trusted
#       TC. We used to have a tool for this but it is gone.
libsimple1.arm.so: hello.bc fortytwo.bc
	$(PNACL_LD) -nostdlib -shared -fPIC  -arch arm $(ARM_FLAGS) -o $@.raw $^
	$(NCVAL_ARM) --zero-masks $@.raw
	(head --bytes=7 $@.raw; printf '\000\000'; tail --bytes=+10 $@.raw) >$@

# mostly sandboxed
libsimple2.arm.so: hello2.bc fortytwo2.bc
	$(PNACL_LD) -nostdlib -shared -fPIC  -arch arm $(ARM_FLAGS) -o $@.raw $^
	(head --bytes=7 $@.raw; printf '\000\000'; tail --bytes=+10 $@.raw) >$@
	# plt does not validate yet
	# http://code.google.com/p/nativeclient/issues/detail?id=1816
	#$(NCVAL_ARM) --zero-masks $@

# *not* sanboxed
main.arm: main.c libsimple1.arm.so
	$(ARM_CC)  -Wl,-Ttext-segment=20000 -o $@ -L. -lsimple1.arm  main.c

main2.arm: main.c libsimple1.arm.so libsimple2.arm.so
	$(ARM_CC)  -Wl,-Ttext-segment=20000 -o $@ -L. -lsimple1.arm  -lsimple2.arm main.c


run.arm: main.arm
	LD_LIBRARY_PATH=. $(QEMU) ./main.arm
	echo "success"

run2.arm: main2.arm
	LD_LIBRARY_PATH=. $(QEMU) ./main2.arm
	echo "success"
######################################################################

clean:
	rm -f *.bc *.o *.ll *.so main *.pso *.raw
