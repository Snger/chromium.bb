# -*- python -*-
# Copyright (c) 2012 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

Import('env')

if 'TRUSTED_ENV' not in env:
  Return()

# gdb is currently built only on Linux.
# PNaCl and ARM bots don't have gdb.
# TODO(halyavin) : check debugger with PNaCl and enable test if possible.
if not env.Bit('host_linux') or env.Bit('bitcode') or env.Bit('target_arm'):
  Return()

gdb_test_guest = env.ComponentProgram(
    'gdb_test_guest', 'gdb_test_guest.c',
    EXTRA_LIBS=['${NONIRT_LIBS}'])

sel_ldr = env.GetSelLdr()
irt = env.GetIrtNexe()
dependencies = [sel_ldr, irt, gdb_test_guest]

env_vars = [
    'OUT_DIR=%s' % env.subst('${TARGET_ROOT}/test_results'),
    'NACL_SEL_LDR=%s' % sel_ldr,
    'NACL_IRT=%s' % irt,
    'GDB_TEST_GUEST=%s' % gdb_test_guest.abspath,
    'NACL_GDB=%s' % env['GDB'],
    ]

node = env.CommandTest(
    'stepi_after_break.out',
    command=['${PYTHON}', env.File('stepi_after_break.py')],
    osenv=env_vars,
    extra_deps=dependencies)

# TODO(halyavin): commit changes to gdb to support breakpoints in glibc.
env.AddNodeToTestSuite(node, ['large_tests'], 'run_stepi_after_break_test',
                       is_broken=not env.Bit('nacl_static_link'))