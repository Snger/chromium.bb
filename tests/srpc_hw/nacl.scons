# -*- python -*-
# Copyright (c) 2011 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

Import('env')

srpc_hw_nexe = env.ComponentProgram('srpc_hw.nexe',
                                    'srpc_hw.c',
                                    EXTRA_LIBS=['srpc', 'imc','pthread'])

nacl_js_lib = env.File('${SCONSTRUCT_DIR}/tests/nacl_js_lib.js')
env.Publish('srpc_hw.nexe', 'run', ['srpc_hw.html', nacl_js_lib])
env.Publish('srpc_hw.nexe', 'run', ['srpc_hw_fd.html', nacl_js_lib])

env.AddPrebuiltBinaryToRepository(srpc_hw_nexe)

node = env.SelUniversalTest(
    'srpc_hw_test.out',
    sel_universal_flags=['--command_file', env.File('srpc_hw_test.stdin')],
    command=[srpc_hw_nexe],
    stdout_golden=env.File('srpc_hw_test.stdout'),
    )
env.AddNodeToTestSuite(node,
                       ['small_tests'],
                       'run_srpc_hw_test')

# chrome_browser_tests

node = env.PPAPIBrowserTester(
    'srpc_hw_browser_test.out',
    url='srpc_hw.html',
    files=[srpc_hw_nexe, env.File('srpc_hw.html')],
    args=['--debug'])

env.AddNodeToTestSuite(node,
                       ['chrome_browser_tests'],
                       'run_srpc_hw_chrome_browser_test',
                       is_broken=env.PPAPIBrowserTesterIsBroken())

node = env.PPAPIBrowserTester(
    'srpc_hw_fd_browser_test.out',
    url='srpc_hw_fd.html',
    files=[srpc_hw_nexe, env.File('srpc_hw_fd.html')],
    args=['--debug'])

env.AddNodeToTestSuite(node,
                       ['chrome_browser_tests'],
                       'run_srpc_hw_fd_chrome_browser_test',
                       is_flaky=True, # Don't subject Chrome to our problems.
                       is_broken=env.PPAPIBrowserTesterIsBroken())

