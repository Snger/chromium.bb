# -*- python -*-
# Copyright 2011 The Native Client Authors.  All rights reserved.
# Use of this source code is governed by a BSD-style license that can
# be found in the LICENSE file.

Import('env')

# We do not expect the blob library to be produced by linking against
# nacl-glibc.
if env.Bit('nacl_glibc'):
  Return()
# Although the regular PNaCl frontend is able to link object files
# generated from assembly code, the sandboxed version cannot.
if env.Bit('use_sandboxed_translator'):
  Return()

env.Append(LINKFLAGS='-Wl,--section-start,.rodata=${IRT_DATA_REGION_START}')
# An explicit output name is specified so an object file is created in the
# blob_library_loading output directory.
hw_o = env.ComponentObject('hello_world.o', '../hello_world/hello_world.c')
user_executable = env.ComponentProgram(
    'hello_world_with_segment_gap.nexe',
    hw_o)

node = env.CommandSelLdrTestNacl(
    'blob_library_loading_test.out',
    sel_ldr_flags=['-B', env.File('${STAGING_DIR}/irt.nexe')],
    command=[user_executable],
    stdout_golden=env.File('${SCONSTRUCT_DIR}/tests/hello_world'
                           '/hello_world.stdout'))
# TODO(kcc): The segment gap confuses the Valgrind debug info reader.
# See http://code.google.com/p/nativeclient/issues/detail?id=1606
is_broken = env.IsRunningUnderValgrind()
env.AddNodeToTestSuite(node, ['small_tests'], 'run_blob_library_loading_test',
                       is_broken=is_broken)
