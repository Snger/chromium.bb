# -*- python -*-
# Copyright (c) 2011 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This is a C PPAPI
#
# ppapi_file_system.html - test driver that loads the nexe
# ppapi_file_system.js - set up the test driver
# ppapi_file_system.nmf - manifest file for serving platform specific nexe binary.
#
# ppapi_file_system.cc - implementation of ppapi_test_lib/test_interface.h

Import('env')

env.Prepend(CPPDEFINES=['XP_UNIX'])

nexe = 'ppapi_file_system_%s' % env.get('TARGET_FULLARCH')

env.Alias('ppapi_file_system${PROGSUFFIX}',
          ['$STAGING_DIR/%s${PROGSUFFIX}' % nexe])

ppapi_file_system_nexe = env.ComponentProgram(nexe,
                                              ['ppapi_file_system.cc'],
                                              EXTRA_LIBS=['${PPAPI_LIBS}',
                                                          'ppapi_test_lib',
                                                          'platform',
                                                          'gio',
                                                          'pthread'])
env.Publish(nexe, 'run',
            ['ppapi_file_system.html',
             'ppapi_file_system.nmf',
             'ppapi_file_system.js'])
node = env.PPAPIBrowserTester('ppapi_file_system_browser_test.out',
                              url='ppapi_file_system.html',
                              files=env.ExtractPublishedFiles(nexe),
                              args=['--enable_experimental_js'])

# Disabled for ARM because Chrome binaries for ARM are not available.
# TODO(ncbray): Enable this on Windows.
tester_is_broken = \
    (env.Bit('target_arm') or
     (env.Bit('host_windows') and
      not env.Bit('disable_dynamic_plugin_loading')))
env.AddNodeToTestSuite(node,
                       ['chrome_browser_tests'],
                       'run_ppapi_file_system_browser_test',
                       is_broken=tester_is_broken)
