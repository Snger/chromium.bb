# -*- python -*-
# Copyright (c) 2012 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

Import('env')

# Exception handling support is not implemented everywhere yet.
is_broken = (not (env.Bit('host_windows') or env.Bit('host_mac')) or
             not env.Bit('build_x86_32'))

# To keep PNaCl enthusiasts happy, we support a pure-bitcode version
# of the test, but it is less strict.  The non-PNaCl version uses
# assembly code and can check for exact values of the reported
# instruction pointer and stack pointer.
if env.Bit('bitcode'):
  helper_files = []
else:
  helper_files = ['crash_at_known_address_x86.S',
                  'handler_wrapper_x86.S']
exception_test = env.ComponentProgram('exception_test',
                                      ['exception_test.c'] + helper_files,
                                      EXTRA_LIBS=['${NONIRT_LIBS}'])

node = env.CommandSelLdrTestNacl(
    'exception_test.out',
    exception_test,
    declares_exit_status=True,
    sel_ldr_flags=['-e'])
env.AddNodeToTestSuite(
    node, ['small_tests', 'exception_tests'],
    'run_exception_test', is_broken=is_broken)

exception_crash_test = env.ComponentProgram(
    'exception_crash_test', ['exception_crash_test.c'],
    EXTRA_LIBS=['${NONIRT_LIBS}'])

node = env.CommandSelLdrTestNacl(
    'exception_bad_handler_test.out',
    exception_crash_test, ['test_bad_handler'],
    sel_ldr_flags=['-e'],
    declares_exit_status=True)
env.AddNodeToTestSuite(
    node, ['small_tests', 'exception_tests'],
    'run_exception_bad_handler_test', is_broken=is_broken)

node = env.CommandSelLdrTestNacl(
    'exception_bad_stack_test.out',
    exception_crash_test, ['test_bad_stack'],
    sel_ldr_flags=['-e'],
    declares_exit_status=True)
env.AddNodeToTestSuite(
    node, ['small_tests', 'exception_tests'],
    'run_exception_bad_stack_test', is_broken=is_broken)
