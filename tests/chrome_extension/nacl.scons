# -*- python -*-
# Copyright 2011 The Native Client Authors.  All rights reserved.
# Use of this source code is governed by a BSD-style license that can
# be found in the LICENSE file.

# Test loading a NaCl-enabled Chrome Extension.

Import('env')

# BUG(adonovan): test is breaking on ARM.  Disable in haste...
if env.Bit('target_arm'):
  Return()

# Build the .nexe used by this test.
nexe_sources = env.ComponentObject('extension_test.cc'),

nexe_target = 'chrome_extension_%s.nexe' % env.get('TARGET_FULLARCH')
nexe = env.ComponentProgram(nexe_target,
                            [nexe_sources],
                            EXTRA_LIBS=['${PPAPI_LIBS}', 'ppapi_cpp'])

# Note: this test uses the nexe built above, manifest.json, background.html and
# test_bridge.js, but these files are loaded from the disk as part of the
# installed Chrome extension and not loaded through the tester's web server.
# These files need their own install command.
dest_copy = env.Replicate('$STAGING_DIR/chrome_extension',
                          [nexe,
                           'background.html',
                           'chrome_extension.nmf',
                           'manifest.json',
                           'test_bridge.js'])

node = env.PPAPIBrowserTester(
    'chrome_extension_test.out',
    url='chrome_extension_test.html',
    extensions=[env.Dir('$STAGING_DIR/chrome_extension')],
    files=[env.File('chrome_extension_test.html')],
    args=['--debug'] # The extension test has been a little flakey.
    )
env.Depends(node, dest_copy)

# TODO(nfullagar): nexe's are stalling out when polling __module_ready
broken = True
env.AddNodeToTestSuite(node,
                       ['chrome_browser_tests'],
                       'run_chrome_extension_test',
                       is_flaky=True, # Don't subject Chrome to our problems.
                       is_broken=broken or env.PPAPIBrowserTesterIsBroken())
