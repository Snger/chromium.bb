# Copyright 2009 The Native Client Authors.  All rights reserved.
# Use of this source code is governed by a BSD-style license that can
# be found in the LICENSE file.

Import('env')

# force inclusion of entire library, so that we can validate it
# NOTE: This approach does not work for -lc because of tons of
#       undefined symbols which would have to be stubbed out
wa_env = env.Clone()
if not ARGUMENTS.get('bitcode') and not env.Bit('nacl_glibc'):
  # NOTE: the pnacl linker does not understand '-Wl,-whole-archive'
  # c.f. http://code.google.com/p/nativeclient/issues/detail?id=943
  # NOTE: This test does not build successfully with nacl-glibc yet.
  wa_env.Prepend(LINKFLAGS=['-Wl,-whole-archive',
                            '-lgcc',
                            '-lm',
                            '-lnacl',
                            '-lsrpc',
                            '-lpthread',
                            '-Wl,-no-whole-archive'])

nexe = wa_env.ComponentProgram('dummy.nexe', 'dummy.c')
node = wa_env.CommandValidatorTestNacl('whole_archive_test.out',
                                       image=[nexe])
wa_env.AddNodeToTestSuite(node, ['toolchain_tests'], 'run_whole_archive_test')


if not ARGUMENTS.get('bitcode'):
  # c.f. http://code.google.com/p/nativeclient/issues/detail?id=516
  nexe = env.ComponentProgram('setlongjmp.nexe', 'setlongjmp.c')
  node = env.CommandSelLdrTestNacl('setlongjmp.out',
                                   command=[nexe],
                                   exit_status='55')
  env.AddNodeToTestSuite(node,
                         ['toolchain_tests','small_tests'],
                         'run_setlongjmp_test')

# NOTE: this currently only works for PNaCl, c.f:
# http://code.google.com/p/nativeclient/issues/detail?id=968
INITFINIT_TESTS=['toolchain_tests', 'small_tests']
if not ARGUMENTS.get('bitcode'):
  INITFINIT_TESTS=[]

nexe = env.ComponentProgram('initfini.nexe', 'initfini.c')
node = env.CommandSelLdrTestNacl('initfini.out',
                                 command=[nexe],
                                 stdout_golden=env.File('initfini.stdout'))
env.AddNodeToTestSuite(node, INITFINIT_TESTS, 'run_initfini_test')


# NOTE: the tests below break easily under valgrid and since
#       they do not exercise malloc/free we exclude
if env.IsRunningUnderValgrind():
  Return()


sloppy_env = env.Clone()
sloppy_env.FilterOut(CFLAGS=['-pedantic', '-O2'])
sloppy_env.FilterOut(CCFLAGS=['-pedantic', '-O2'])
nexe = sloppy_env.ComponentProgram('return_address.nexe', 'return_address.c')
node = sloppy_env.CommandSelLdrTestNacl('return_address.out',
                                        command=[nexe],
                                        exit_status='55')
sloppy_env.AddNodeToTestSuite(node,
                              ['toolchain_tests', 'small_tests'],
                              'run_return_address_test')


eh_env = env.Clone()

# http://code.google.com/p/nativeclient/issues/detail?id=720
# we should try all 4 combinations here opt/no-opt, fp/no-fp
eh_env.FilterOut(CFLAGS=['-pedantic', '-O2', '-fomit-frame-pointer'])
eh_env.FilterOut(CCFLAGS=['-pedantic', '-O2', '-fomit-frame-pointer'])
eh_env.Append(CPPDEFINES=['TARGET_FULLARCH=${TARGET_FULLARCH}'])

# http://code.google.com/p/nativeclient/issues/detail?id=720
EH_TESTS=['toolchain_tests', 'small_tests']
if ARGUMENTS.get('bitcode') and eh_env['TARGET_FULLARCH'] != 'x86-32':
  EH_TESTS=[]

for t in ['eh_virtual_dtor',
          'eh_loop_single',
          'eh_loop_many',
          'eh_catch_many',
          'eh_loop_break']:
  nexe = eh_env.ComponentProgram(t + '.nexe', t + '.cc')
  node = eh_env.CommandSelLdrTestNacl(t + '.out',
                                      command=[nexe],
                                      exit_status='55')
  eh_env.AddNodeToTestSuite(node, EH_TESTS, 'run_' + t + '_test')


# http://code.google.com/p/nativeclient/issues/detail?id=720
STACKFRAME_TESTS=['toolchain_tests', 'small_tests']
if eh_env['TARGET_FULLARCH'] == 'arm':
  STACKFRAME_TESTS=[]

# http://code.google.com/p/nativeclient/issues/detail?id=720
if eh_env['TARGET_FULLARCH'] != 'arm':
  nexe = eh_env.ComponentProgram('stack_frame.nexe', 'stack_frame.cc')
  node = eh_env.CommandSelLdrTestNacl('stack_frame.out',
                                       command=[nexe],
                                       exit_status='55')
  eh_env.AddNodeToTestSuite(node, STACKFRAME_TESTS, 'run_stack_frame_test')

TRACE_TESTS=['toolchain_tests', 'small_tests']
if eh_env['TARGET_FULLARCH'] == 'arm':
  TRACE_TESTS=[]

# http://code.google.com/p/nativeclient/issues/detail?id=1106
if ('PNACL_BCLDFLAGS' in eh_env and
   '-fPIC' in eh_env.get('PNACL_BCLDFLAGS', [])):
  TRACE_TESTS=[]

nexe = eh_env.ComponentProgram('unwind_trace.nexe', 'unwind_trace.cc')
node = eh_env.CommandSelLdrTestNacl('unwind_trace.out',
                                    command=[nexe],
                                    exit_status='55')
eh_env.AddNodeToTestSuite(node, TRACE_TESTS, 'run_unwind_trace_test')
