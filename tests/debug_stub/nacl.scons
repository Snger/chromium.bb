# -*- python -*-
# Copyright 2011 The Native Client Authors.  All rights reserved.
# Use of this source code is governed by a BSD-style license that can
# be found in the LICENSE file.

Import('env')

import sys

# browser_debug disabled:
# http://code.google.com/p/nativeclient/issues/detail?id=1956
# TODO(elijahtaylor) This test can't run on our bots if we don't register
# the plugin we just built.  Depends on:
# http://code.google.com/p/chromium/issues/detail?id=85070
# http://code.google.com/p/nativeclient/issues/detail?id=1917
Return()

if 'TRUSTED_ENV' not in env:
  Return()
trusted_env = env['TRUSTED_ENV']

# The debug stub currently only works on x86-64.
if not env.Bit('target_x86_64'):
  Return()
# The test has to be able to kill the subprocess.
if sys.version_info < (2, 6):
  Return()
# Our test uses inline assembly.
if env.Bit('bitcode'):
  Return()

test_prog = env.ComponentProgram('debugger_test', 'debugger_test.c')

sel_ldr = trusted_env.File('${STAGING_DIR}/${PROGPREFIX}sel_ldr${PROGSUFFIX}')
env_vars = [
    'NACL_SEL_LDR=%s' % sel_ldr,
    'DEBUGGER_TEST_PROG=%s' % test_prog.abspath,
    ]
dependencies = [sel_ldr, test_prog]

# TODO(mlinck) Fix the test to correctly kill sel_ldr, and check if the
# port is already busy.  This appears to be related to Hardy which is
# why we are only turning this off on the coverage bots.
# See:
# http://code.google.com/p/nativeclient/issues/detail?id=1724
node = env.CommandTest(
    'debug_stub_test.out',
    command=['${PYTHON}', env.File('debug_stub_test.py'), '-v'],
    osenv=env_vars,
    extra_deps=dependencies)
env.AddNodeToTestSuite(node, ['large_tests'], 'run_debug_stub_test')

# Test debug_stub in Chrome -- currently this ONLY works on Windows
is_broken = not env.Bit('host_windows')

# Build .nexe to be used with debug_in_browswer test
browser_test_target = 'debug_browser_test_%s' % env.get('TARGET_FULLARCH')
browser_test_nexe = env.ComponentProgram(browser_test_target,
                                         ['debug_browser_test.cc'],
                                         EXTRA_LIBS=['${PPAPI_LIBS}',
                                                      'ppapi_cpp']
                                         )

# Note that the html and a .nmf manifest is required to run this program.
dest_copy = env.Replicate('$STAGING_DIR',
                          ['debug_browser.html',
                           'debug_browser_test.nmf'])


env.Depends(browser_test_target, dest_copy)
test_files = [
    browser_test_nexe,
    env.File('$STAGING_DIR/nacltest.js'),
    env.File('$STAGING_DIR/debug_browser_test.nmf'),
    env.File('$STAGING_DIR/debug_browser.html'),
    env.File('$STAGING_DIR/%s${PROGSUFFIX}' % browser_test_target),
    ]

# For now, we have to force this test to always run using chrome's
# built-in NaCl and not with --register-pepper-plugins because
# --enable-nacl-debug does not work with --register-pepper-plugins.
# See: http://code.google.com/p/chromium/issues/detail?id=85070
# TODO(mmortensen) remove the debug_env lines below when issue 85070
# is resolved and a new-enough chrome gets DEPS'd in.
#
# TODO(mmortensen) Get this test (along with other PyAuto tests) running
# on the NaCl chrome integration bots.
# See: http://code.google.com/p/nativeclient/issues/detail?id=1917
debug_env = env.Clone()
debug_env.SetBits('disable_dynamic_plugin_loading')

node = debug_env.PyAutoTester(
    'browser_debug.out',
    env.File('debug_stub_chrome_test.py'),
    extra_chrome_flags=['--enable-nacl-debug','--no-sandbox'],
    files=test_files
)

# TODO(mmortensen) This test appears to be flakey. Please check/fix
# and re-enable.
env.AddNodeToTestSuite(node,
                       ['pyauto_tests'],
                       'run_pyauto_browser_debug_test',
                       is_broken=env.PyAutoTesterIsBroken() or is_broken)


# This test will fail until we fix chrome issue
# http://code.google.com/p/chromium/issues/detail?id=85070
node = env.PyAutoTester(
    'browser_debug_broken.out',
    env.File('debug_stub_chrome_test.py'),
    extra_chrome_flags=['--enable-nacl-debug','--no-sandbox'],
    files=test_files
)

# TODO(mmortensen) Enable this test once chrome --enable-nacl-debug
# works with --register-pepper-plugins.
env.AddNodeToTestSuite(node,
                       ['pyauto_tests'],
                       'run_pyauto_browser_debug_test_broken',
                       is_broken=True)
