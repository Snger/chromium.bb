# -*- python -*-
# Copyright 2012 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

Import('env')


test_prog = env.ComponentProgram('test_guest', ['test_guest.c'],
                                 EXTRA_LIBS=['${NONIRT_LIBS}'])

# If we are generating a pexe, translate it first
if env.Bit('pnacl_generate_pexe'):
  test_prog = env.GetTranslatedNexe(test_prog)

if not env.Bit('host_windows'):
  # This test is specifically for Windows: it checks how NaCl
  # interacts with a Windows API (SetUnhandledExceptionFilter()).
  Return()

if 'TRUSTED_ENV' not in env:
  Return()
trusted_env = env['TRUSTED_ENV']

runner = trusted_env.ComponentProgram(
    'test_host', ['test_host.c'],
    EXTRA_LIBS=['sel',
                'sel_debug_dummy',
                'dbghelp.lib', # Windows library
                ])

crash_types = [
    ('run_windows_crash_in_syscall_test',
     'NACL_TEST_CRASH_MEMORY'),
    ('run_windows_log_fatal_in_syscall_test',
     'NACL_TEST_CRASH_LOG_FATAL'),
    ('run_windows_check_failure_in_syscall_test',
     'NACL_TEST_CRASH_CHECK_FAILURE'),
    ]
for name, arg in crash_types:
  node = env.CommandTest(
      '%s.out' % name, [runner, test_prog, arg], declares_exit_status=True)
  env.AddNodeToTestSuite(node, ['small_tests'], name,
                         is_broken=not env.Bit('nacl_static_link'))
