# -*- python -*-
# Copyright (c) 2011 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

Import('env')

# http://code.google.com/p/nativeclient/issues/detail?id=2400
if env.Bit('linux') and env.Bit('build_x86_64'):
  Return()

# postmessage test to check that exit status is available to
# JavaScript

pm_es_obj = env.ComponentObject('pm_exit_status_test.o',
                                'pm_exit_status_test.cc')
pm_es_nexe_name = 'pm_exit_status_test_%s' % env.get('TARGET_FULLARCH')
pm_es_nexe = env.ComponentProgram(pm_es_nexe_name,
                                  pm_es_obj,
                                  EXTRA_LIBS=['ppapi_cpp',
                                              '${PPAPI_LIBS}',
                                              ])
env.Publish(pm_es_nexe_name, 'run',
            ['pm_exit_status_test.html', 'pm_exit_status_test7.html'])

# chrome_browser_tests

for out_name, run_name, test_args in [
    ['pm_exit0_status_browser_test.out',
     'run_pm_exit0_status_chrome_browser_test',
     [('trigger', 'exit0'), ('expected_exit', '0')]],
    ['pm_exit7_status_browser_test.out',
     'run_pm_exit7_status_chrome_browser_test',
     [('trigger', 'exit7'), ('expected_exit', '7')]],
    ['pm_exit254_status_browser_test.out',
     'run_pm_exit254_status_chrome_browser_test',
     [('trigger', 'exit254'), ('expected_exit', '254')]],
    ['pm_exitneg2_status_browser_test.out',
     'run_pm_exitneg2_status_chrome_browser_test',
     [('trigger', 'exitneg2'), ('expected_exit', '254')]],
    ]:

    node = env.PPAPIBrowserTester(
        out_name,
        url='pm_exit_status_test.html',
        nmfs=['pm_exit_status.nmf'],
        files=env.ExtractPublishedFiles(pm_es_nexe_name),
        args=['--debug'],
        test_args=test_args,
        osenv=['NACLVERBOSITY=0:pp_weak_ref=0:weak_ref=0']
        )

    env.AddNodeToTestSuite(node,
                           ['chrome_browser_tests', 'exit_status_tests'],
                           run_name,
                           is_broken=env.PPAPIBrowserTesterIsBroken())
