# First register a bunch of dummy replays with zero count
# so that those signatures will get registered during "install_upcalls"
# Note: because of the zero count we do not have to get the parameters right
#
# Enumerating all known methods ahead of time helps in many ways:
# * we can delay registering non zero count replays till later which help
#   readability
# * we get an error if for some reason the nexe calls one of these functions.
#   Sadly, the nexe usually fails silently when a method is missing from a
#   service
#
# On the downside, this is currently replicated and must be updated by hand
# when signatures change.

replay 0 HasProperty:CCC:iC *
replay 0 HasMethod:CCC:iC *
replay 0 GetProperty:CCC:CC *
replay 0 GetAllPropertyNames:CC:iCC *
replay 0 SetProperty:CCCC:C *
replay 0 RemoveProperty:CCC:C *
replay 0 Call:CCiCC:CC *
replay 0 Construct:CiCC:CC *
replay 0 Deallocate:C: *
replay 0 PPB_GetInterface:s:i *

replay 0 PPB_Audio_Dev_Create:ii:i *
replay 0 PPB_Audio_Dev_IsAudio:i:i *
replay 0 PPB_Audio_Dev_GetCurrentConfig:i:i *
replay 0 PPB_Audio_Dev_StopPlayback:i:i *
replay 0 PPB_Audio_Dev_StartPlayback:i:i *

replay 0 PPB_AudioConfig_Dev_CreateStereo16Bit:lii:l *
replay 0 PPB_AudioConfig_Dev_IsAudioConfig:l:i *
replay 0 PPB_AudioConfig_Dev_RecommendSampleFrameCount:i:i *
replay 0 PPB_AudioConfig_Dev_GetSampleRate:l:i *
replay 0 PPB_AudioConfig_Dev_GetSampleFrameCount:l:i *

replay 0 PPB_Core_AddRefResource:i: *
replay 0 PPB_Core_ReleaseResource:i: *
replay 0 PPB_Core_GetTime::d *
replay 0 ReleaseResourceMultipleTimes:ii: *

replay 0 PPB_FileIO_Dev_Create:i:i *
replay 0 PPB_FileIO_Dev_IsFileIO:i:i *
replay 0 PPB_FileIO_Dev_Open:iiii:i *
replay 0 PPB_FileIO_Dev_Read:ilii:Ci *

replay 0 PPB_Graphics2D_Create:iCi:i *
replay 0 PPB_Graphics2D_IsGraphics2D:i:i *
replay 0 PPB_Graphics2D_Describe:i:Cii *
replay 0 PPB_Graphics2D_PaintImageData:iiCC: *
replay 0 PPB_Graphics2D_Scroll:iCC: *
replay 0 PPB_Graphics2D_ReplaceContents:ii: *
replay 0 PPB_Graphics2D_Flush:ii:i *

replay 0 PPB_ImageData_GetNativeImageDataFormat::i *
replay 0 PPB_ImageData_IsImageDataFormatSupported:i:i *
replay 0 PPB_ImageData_Create:iiCi:i *
replay 0 PPB_ImageData_IsImageData:i:i *
replay 0 PPB_ImageData_Describe:i:Chii *

replay 0 PPB_Instance_GetWindowObject:i:C *
replay 0 PPB_Instance_GetOwnerElementObject:i:C *
replay 0 PPB_Instance_BindGraphics:ii:i *
replay 0 PPB_Instance_IsFullFrame:i:i *
replay 0 PPB_Instance_ExecuteScript:iCC:CC *

replay 0 PPB_URLRequestInfo_Create:i:i *
replay 0 PPB_URLRequestInfo_IsURLRequestInfo:i:i *
replay 0 PPB_URLRequestInfo_IsURLResponseInfo:i:i *
replay 0 PPB_URLRequestInfo_SetProperty:iiC:i *
replay 0 PPB_URLRequestInfo_AppendDataToBody:iC:i *
replay 0 PPB_URLRequestInfo_AppendFileToBody:illld:i *

replay 0 PPB_URLLoader_Open:iii:i *
replay 0 PPB_URLLoader_Create:i:i *
replay 0 PPB_URLLoader_FollowRedirect:ii:i *
replay 0 PPB_URLLoader_GetUploadProgress:i:lli *
replay 0 PPB_URLLoader_GetDownloadProgress:i:lli *
replay 0 PPB_URLLoader_ReadResponseBody:iii:Ci *
replay 0 PPB_URLLoader_GetResponseInfo:i:i *
replay 0 PPB_URLLoader_Close:i: *
replay 0 PPB_URLLoader_IsURLLoader:i:i *


replay 0 PPB_URLResponseInfo_IsURLResponseInfo:i:i *
replay 0 PPB_URLResponseInfo_GetProperty:ii:C *
replay 0 PPB_URLResponseInfo_GetBodyAsFileRef:i:l *

######################################################################
## END OF PROLOG
######################################################################

# define a bunch of variables for readability

set_variable MODULE i(4444)
set_variable INSTANCE i(5555)

# Tags used by pepper/srpc to marshall js parameters
set_variable JS_STR 4:5
set_variable JS_INT 4:2

# NOTE: the strings below must not contain unescaped spaces or commas
set_variable ARG_loadUrl ${JS_STR},4:7,"loadUrl",1:0
set_variable ARG_ReportResult ${JS_STR},4:12,"ReportResult",4:0

set_variable ARG_URL1 ${JS_STR},4:25,"ppapi_geturl_success.html",7:0
set_variable ARG_URL1_FULL ${JS_STR},4:47,"http://localhost:5103/ppapi_geturl_success.html",1:0
set_variable ARG_URL2 ${JS_STR},4:32,"http://www.google.com/robots.txt"
set_variable ARG_URL3 ${JS_STR},4:39,"http://localhost:5103/non_existant.html",1:0

set_variable ARG_ERR1 ${JS_STR},4:38,"PPB_URLLoader::Open:\x20PP_ERROR_NOACCESS",2:0
set_variable ARG_ERR2 ${JS_STR},4:34,"PPB_URLRequestInfo::Create:\x20failed",6:0
set_variable ARG_GET  ${JS_STR},4:3,"GET",5:0

set_variable ARG_SUCC ${JS_STR},4:12,"hello\x20world!",4:0
set_variable ARG_0 ${JS_INT},4:0
set_variable ARG_1 ${JS_INT},4:1

set_variable WINDOW R(24,8:6,8:0x9f,8:0x5f29)
# TODO(robertm) figure out what this represents, maybe PP_Var
set_variable EXCEPTION R(8,8:0)
set_variable NULL R(8,8:0)

# Register  signatures found in all previous replay commands for export
# via install_upcalls
echo
echo "*** REGISTER REPLAY METHODS"
replay_activate

# This is not strictly necessary
echo
echo "*** INITIALIZE PEPPER"
initialize_pepper pepper_desc

# create a upcall service on the channel between nexe and sel_univeral
echo
echo "*** CREATE UPCALL SERVICE"
install_upcalls service_string

echo
echo "*** INIT MODULE"
replay 99 PPB_GetInterface:s:i  s("PPB_Core;0.3") * i(1)
replay 99 PPB_GetInterface:s:i  s("PPB_Instance;0.4") * i(1)
replay 99 PPB_GetInterface:s:i  s("PPB_Var(Deprecated);0.3") * i(1)
rpc PPP_InitializeModule i(0) ${MODULE} h(pepper_desc) s("${service_string}") * i(0) i(0)

echo
echo "*** INIT INSTANCE"
set_variable TAGS C(17,id\000name\000src\000type\000)
set_variable VALUES C(63,naclModule\000naclModule\000ppapi.nexe\000application/x-ppapi-nacl-srpc\000)
rpc PPP_Instance_DidCreate ${INSTANCE} i(4) ${TAGS} ${VALUES} * i(0)

echo
echo "*** TRIGGER REPAINT"
rpc PPP_Instance_DidChangeView ${INSTANCE} I(4,8,79,400,400) I(4,0,0,400,400) *
# leave time for flush of stdout

echo
echo "*** GET INSTANCE OBJECT"
rpc PPP_Instance_GetInstanceObject ${INSTANCE} * C(16)
# save result to variable
set_variable OBJECT ${result0}

echo
echo "*** HAS PROPERTY/METHOD (loadUrl)"
rpc HasProperty ${OBJECT} R(16,${ARG_loadUrl}) ${EXCEPTION} * i(0) C(8)
rpc HasMethod ${OBJECT} R(16,${ARG_loadUrl}) ${EXCEPTION} * i(0) C(8)

######################################################################
## URL1
######################################################################
echo
echo "*** CALL loadUrl(): url1 as buffer"
replay 1 PPB_GetInterface:s:i  s("PPB_URLRequestInfo;0.2") * i(1)
replay 1 PPB_GetInterface:s:i  s("PPB_URLResponseInfo;0.1") * i(1)
replay 1 PPB_GetInterface:s:i  s("PPB_URLLoader;0.1") * i(1)
replay 1 PPB_GetInterface:s:i  s("PPB_FileIO(Dev);0.3") * i(1)

replay 1 PPB_FileIO_Dev_Create:i:i ${INSTANCE} * i(35)
replay 1 PPB_URLRequestInfo_Create:i:i ${INSTANCE} * i(30)
replay 1 PPB_URLLoader_Create:i:i  ${INSTANCE} * i(34)

replay 1 PPB_FileIO_Dev_IsFileIO:i:i i(35) * i(1)
replay 1 PPB_URLRequestInfo_IsURLRequestInfo:i:i i(35) * i(0)
replay 1 PPB_URLResponseInfo_IsURLResponseInfo:i:i i(35) * i(0)
replay 1 PPB_URLLoader_IsURLLoader:i:i i(35) * i(0)

replay 1 PPB_URLRequestInfo_IsURLRequestInfo:i:i i(30) * i(1)
replay 1 PPB_URLResponseInfo_IsURLResponseInfo:i:i i(30) * i(0)
replay 1 PPB_URLLoader_IsURLLoader:i:i i(30) * i(0)
replay 1 PPB_FileIO_Dev_IsFileIO:i:i i(30) * i(0)

replay 1 PPB_URLRequestInfo_IsURLRequestInfo:i:i i(34) * i(0)
replay 1 PPB_URLResponseInfo_IsURLResponseInfo:i:i i(34) * i(0)
replay 1 PPB_URLLoader_IsURLLoader:i:i i(34) * i(1)
replay 1 PPB_FileIO_Dev_IsFileIO:i:i i(34) * i(0)

replay 1 PPB_URLRequestInfo_SetProperty:iiC:i i(30) i(0) R(40,${ARG_URL1}) * i(1)
replay 1 PPB_URLRequestInfo_SetProperty:iiC:i i(30) i(1) R(16,${ARG_GET}) * i(1)
replay 1 PPB_URLRequestInfo_SetProperty:iiC:i i(30) i(3) R(8,${ARG_0}) * i(1)

replay 1 PPB_URLLoader_Open:iii:i i(34) i(30) i(1) * i(-1)
rpc Call ${OBJECT} R(16,${ARG_loadUrl}) i(2) R(48,${ARG_URL1},${ARG_0}) ${NULL} * C(8) C(8)

echo
echo "*** async response for url1 part1"
replay 1 PPB_URLLoader_GetResponseInfo:i:i i(34) * i(38)
replay 1 PPB_FileIO_Dev_IsFileIO:i:i i(38) * i(0)
replay 1 PPB_URLRequestInfo_IsURLRequestInfo:i:i i(38) * i(0)
replay 1 PPB_URLResponseInfo_IsURLResponseInfo:i:i i(38) * i(1)
replay 1 PPB_URLLoader_IsURLLoader:i:i i(38) * i(0)
replay 1 PPB_URLResponseInfo_GetProperty:ii:C i(38) i(0) * R(56,${ARG_URL1_FULL})
replay 1 PPB_URLResponseInfo_GetProperty:ii:C i(38) i(3) * R(8,4:3,4:200)
replay 1 PPB_URLLoader_ReadResponseBody:iii:Ci i(34) i(1024) i(2) * C(0,) i(-1)
rpc RunCompletionCallback i(1) i(0) C(0,) *

echo
echo "*** async response for url1 part2"
replay 1 PPB_URLLoader_ReadResponseBody:iii:Ci i(34) i(1024) i(3) * C(0,) i(-1)
rpc RunCompletionCallback i(2) i(12) C(12,hello\x20world!) *

echo
echo "*** async response for url1 eof - report success"
replay 1 PPB_Instance_GetWindowObject:i:C ${INSTANCE} * ${WINDOW}
replay 1 Call:CCiCC:CC R(16,8:0x9f,8:0x5f29) R(24,${ARG_ReportResult}) i(4) R(96,${ARG_URL1_FULL},${ARG_0},${ARG_SUCC},${ARG_1}) ${NULL} * ${NULL} ${NULL}
replay 1 PPB_Core_ReleaseResource:i: i(30) *
replay 1 PPB_Core_ReleaseResource:i: i(34) *
replay 1 PPB_Core_ReleaseResource:i: i(35) *
replay 1 PPB_Core_ReleaseResource:i: i(38) *
rpc RunCompletionCallback i(3) i(0) C(0,) *

echo
echo "*** CALL loadUrl(): url1 as file"
replay 1 PPB_GetInterface:s:i  s("PPB_FileIO(Dev);0.3") * i(1)
replay 1 PPB_GetInterface:s:i  s("PPB_URLRequestInfo;0.2") * i(1)
replay 1 PPB_GetInterface:s:i  s("PPB_URLResponseInfo;0.1") * i(1)
replay 1 PPB_GetInterface:s:i  s("PPB_URLLoader;0.1") * i(1)

replay 1 PPB_URLLoader_Create:i:i  ${INSTANCE} * i(34)
replay 1 PPB_URLRequestInfo_Create:i:i ${INSTANCE} * i(30)
replay 1 PPB_FileIO_Dev_Create:i:i ${INSTANCE} * i(66)

replay 1 PPB_FileIO_Dev_IsFileIO:i:i i(66) * i(1)
replay 1 PPB_URLLoader_IsURLLoader:i:i i(66) * i(0)
replay 1 PPB_URLResponseInfo_IsURLResponseInfo:i:i i(66) * i(0)
replay 1 PPB_URLRequestInfo_IsURLRequestInfo:i:i i(66) * i(0)

replay 1 PPB_FileIO_Dev_IsFileIO:i:i i(30) * i(0)
replay 1 PPB_URLResponseInfo_IsURLResponseInfo:i:i i(30) * i(0)
replay 1 PPB_URLRequestInfo_IsURLRequestInfo:i:i i(30) * i(1)
replay 1 PPB_URLLoader_IsURLLoader:i:i i(30) * i(0)

replay 1 PPB_FileIO_Dev_IsFileIO:i:i i(34) * i(0)
replay 1 PPB_URLRequestInfo_IsURLRequestInfo:i:i i(34) * i(0)
replay 1 PPB_URLResponseInfo_IsURLResponseInfo:i:i i(34) * i(0)
replay 1 PPB_URLLoader_IsURLLoader:i:i i(34) * i(1)

replay 1 PPB_Instance_GetWindowObject:i:C ${INSTANCE} * ${WINDOW}

replay 1 PPB_URLRequestInfo_SetProperty:iiC:i i(30) i(0) R(40,${ARG_URL1}) * i(1)
replay 1 PPB_URLRequestInfo_SetProperty:iiC:i i(30) i(1) R(16,${ARG_GET}) * i(1)
replay 1 PPB_URLRequestInfo_SetProperty:iiC:i i(30) i(3) R(8,${ARG_1}) * i(1)

replay 1 PPB_URLLoader_Open:iii:i i(34) i(30) i(4) * i(-1)

replay 1 PPB_Core_ReleaseResource:i: i(30) *
replay 1 PPB_Core_ReleaseResource:i: i(34) *
replay 1 PPB_Core_ReleaseResource:i: i(66) *

replay 1 Call:CCiCC:CC R(16,8:0x9f,8:0x5f29) R(24,${ARG_ReportResult}) i(4) R(80,${ARG_URL1},${ARG_1},${ARG_SUCC},${ARG_1}) ${NULL} * ${NULL} ${NULL}

rpc Call ${OBJECT} R(16,${ARG_loadUrl}) i(2) R(48,${ARG_URL1},${ARG_1}) ${NULL} * C(8) C(8)

######################################################################
## URL2
######################################################################
echo
echo "*** CALL loadUrl(): url2 as buffer - expected to fail"
replay 1 PPB_GetInterface:s:i  s("PPB_URLRequestInfo;0.2") * i(1)
replay 1 PPB_Instance_GetWindowObject:i:C ${INSTANCE} * ${WINDOW}
replay 1 Call:CCiCC:CC R(16,8:0x9f,8:0x5f29) R(24,${ARG_ReportResult}) i(4) R(104,${ARG_URL2},${ARG_0},${ARG_ERR2},${ARG_0}) ${NULL} * ${NULL} ${NULL}

replay 1 PPB_FileIO_Dev_Create:i:i ${INSTANCE} * i(35)
replay 1 PPB_URLRequestInfo_Create:i:i ${INSTANCE} * i(40)
replay 1 PPB_URLLoader_Create:i:i  ${INSTANCE} * i(44)

replay 1 PPB_FileIO_Dev_IsFileIO:i:i i(35) * i(1)
replay 1 PPB_URLRequestInfo_IsURLRequestInfo:i:i i(35) * i(0)
replay 1 PPB_URLResponseInfo_IsURLResponseInfo:i:i i(35) * i(0)
replay 1 PPB_URLLoader_IsURLLoader:i:i i(35) * i(0)

replay 1 PPB_FileIO_Dev_IsFileIO:i:i i(40) * i(0)
replay 1 PPB_URLRequestInfo_IsURLRequestInfo:i:i i(40) * i(1)
replay 1 PPB_URLResponseInfo_IsURLResponseInfo:i:i i(40) * i(0)
replay 1 PPB_URLLoader_IsURLLoader:i:i i(40) * i(0)

replay 1 PPB_FileIO_Dev_IsFileIO:i:i i(44) * i(0)
replay 1 PPB_URLRequestInfo_IsURLRequestInfo:i:i i(44) * i(0)
replay 1 PPB_URLResponseInfo_IsURLResponseInfo:i:i i(44) * i(0)
replay 1 PPB_URLLoader_IsURLLoader:i:i i(44) * i(1)

replay 1 PPB_URLRequestInfo_SetProperty:iiC:i i(40) i(0) R(40,${ARG_URL2}) * i(1)
replay 1 PPB_URLRequestInfo_SetProperty:iiC:i i(40) i(1) R(16,${ARG_GET}) * i(1)
replay 1 PPB_URLRequestInfo_SetProperty:iiC:i i(40) i(3) R(8,${ARG_0}) * i(1)

replay 1 PPB_URLLoader_Open:iii:i i(44) i(40) i(5) * i(-7)

replay 1 PPB_Instance_GetWindowObject:i:C ${INSTANCE} * ${WINDOW}
replay 1 Call:CCiCC:CC R(16,8:0x9f,8:0x5f29) R(24,${ARG_ReportResult}) i(4) R(104,${ARG_URL2},${ARG_0},${ARG_ERR1},${ARG_0}) ${NULL} * ${NULL} ${NULL}

replay 1 PPB_Core_ReleaseResource:i: i(35) *
replay 1 PPB_Core_ReleaseResource:i: i(40) *
replay 1 PPB_Core_ReleaseResource:i: i(44) *
rpc Call ${OBJECT} R(16,${ARG_loadUrl}) i(2) R(48,${ARG_URL2},${ARG_0}) ${NULL} * C(8) C(8)

######################################################################
## EPILOG
######################################################################
echo
echo "*** DONE"
rpc PPP_ShutdownModule *
