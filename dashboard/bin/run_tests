#!/usr/bin/python
# Copyright 2015 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

"""Runs the unit test suite for perf dashboard."""

import argparse
import logging
import os
import sys
import unittest

_CATAPULT = os.path.abspath(
    os.path.join(os.path.dirname(__file__), os.path.pardir, os.path.pardir))


def _AddToPathIfNeeded(path):
  if path not in sys.path:
    sys.path.insert(0, path)


def _GetTests(args):
  loader = unittest.TestLoader()
  if args.tests:
    return loader.loadTestsFromNames(args.tests)
  dashboard_package_path = os.path.join(_CATAPULT, 'dashboard', 'dashboard')
  return loader.discover(dashboard_package_path, pattern='*_test.py')


def _FixPath():
  try:
    import dev_appserver
  except ImportError:
    # TODO(qyearsley): Put the App Engine SDK in the path with the
    # binary dependency manager.
    print 'This script requires the App Engine SDK to be in PYTHONPATH.'
    sys.exit(1)
  dev_appserver.fix_sys_path()
  _AddToPathIfNeeded(os.path.join(_CATAPULT, 'dashboard'))
  import dashboard
  for library in dashboard.THIRD_PARTY_LIBRARIES:
    _AddToPathIfNeeded(os.path.join(_CATAPULT, 'third_party', library))


def Main():
  _FixPath()
  parser = argparse.ArgumentParser(description='Run the test suite.')
  parser.add_argument('tests', nargs='*', help='Fully-qualified test name.')
  parser.add_argument('-v', '--verbose', action='store_true')
  args = parser.parse_args()
  tests = _GetTests(args)
  if not args.verbose:
    logging.basicConfig(format='', level=logging.CRITICAL)
  runner = unittest.TextTestRunner(verbosity=2)
  result = runner.run(tests)
  return 0 if result.wasSuccessful() else 1


if __name__ == '__main__':
  sys.exit(Main())
