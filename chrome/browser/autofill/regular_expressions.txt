/////////////////////////////////////////////////////////////////////////////
// address_field.cc
/////////////////////////////////////////////////////////////////////////////

const char kAttentionIgnoredRe[] = "attention|attn";
const char kRegionIgnoredRe[] =
    "province|region|other"
    // es
    "|provincia"
      // pt-BR, pt-PT
    "|bairro|suburb";
const char kCompanyRe[] =
    "company|business|organization|organisation"
    // de-DE
    "|firma|firmenname"
    // es
    "|empresa"
    // fr-FR: |societe|société
    "|societe|soci\xc3\xa9t\xc3\xa9"
    // it-IT
    "|ragione.?sociale"
    // ja-JP: 会社
    "|\xe4\xbc\x9a\xe7\xa4\xbe"
    // ru: название.?компании
    "|\xd0\xbd\xd0\xb0\xd0\xb7\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5.?\xd0"
        "\xba\xd0\xbe\xd0\xbc\xd0\xbf\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb8"
    // zh-CN: 单位|公司
    "|\xe5\x8d\x95\xe4\xbd\x8d|\xe5\x85\xac\xe5\x8f\xb8"
    // ko-KR: 회사|직장
    "|\xed\x9a\x8c\xec\x82\xac|\xec\xa7\x81\xec\x9e\xa5";
const char kAddressLine1Re[] =
    "address.*line|address1|addr1|street"
    // de-DE: |strasse|straße|hausnummer|housenumber
    "|strasse|stra\xc3\x9f""e|hausnummer|housenumber"
    // en-GB
    "|house.?name"
    // es: |direccion|dirección
    "|direccion|direcci\xc3\xb3n"
    // fr-FR
    "|adresse"
    // it-IT
    "|indirizzo"
    // ja-JP: 住所1
    "|\xe4\xbd\x8f\xe6\x89\x80""1"
    // pt-BR, pt-PT: morada|endereço
    "|morada|endere\xc3\xa7o"
    // ru: Адрес
    "|\xd0\x90\xd0\xb4\xd1\x80\xd0\xb5\xd1\x81"
    // zh-CN: 地址
    "|\xe5\x9c\xb0\xe5\x9d\x80"
    // ko-KR: 주소.?1
    "|\xec\xa3\xbc\xec\x86\x8c.?1";
const char kAddressLine1LabelRe[] =
    "address"
    // fr-FR: |adresse
    "|adresse"
    // it-IT: |indirizzo
    "|indirizzo"
    // ja-JP: |住所
    "|\xe4\xbd\x8f\xe6\x89\x80"
    // zh-CN: |地址
    "|\xe5\x9c\xb0\xe5\x9d\x80"
    // ko-KR: |주소
    "|\xec\xa3\xbc\xec\x86\x8c";
const char kAddressLine2Re[] =
    "address.*line2|address2|addr2|street|suite|unit"
    // de-DE: |adresszusatz|ergänzende.?angaben
    "|adresszusatz|erg\xc3\xa4nzende.?angaben"
    // es: |direccion2|colonia|adicional
    "|direccion2|colonia|adicional"
    // fr-FR: |addresssuppl|complementnom|appartement
    "|addresssuppl|complementnom|appartement"
    // it-IT: |indirizzo2
    "|indirizzo2"
    // ja-JP: |住所2
    "|\xe4\xbd\x8f\xe6\x89\x80""2"
    // pt-BR, pt-PT: |complemento|addrcomplement
    "|complemento|addrcomplement"
    // ru: |Улица
    "|\xd0\xa3\xd0\xbb\xd0\xb8\xd1\x86\xd0\xb0"
    // zh-CN: |地址2
    "|\xe5\x9c\xb0\xe5\x9d\x80""2"
    // ko-KR: |주소.?2
    "|\xec\xa3\xbc\xec\x86\x8c.?2";
const char kAddressLine2LabelRe[] =
    "address"
    // fr-FR: |adresse
    "|adresse"
    // it-IT: |indirizzo
    "|indirizzo"
    // zh-CN: |地址
    "|\xe5\x9c\xb0\xe5\x9d\x80"
    // ko-KR: |주소
    "|\xec\xa3\xbc\xec\x86\x8c";
const char kAddressLine3Re[] =
    "address.*line3|address3|addr3|street|line3"
    // es: |municipio
    "|municipio"
    // fr-FR: |batiment|residence
    "|batiment|residence"
    // it-IT: |indirizzo3
    "|indirizzo3";
const char kCountryRe[] =
    "country|countries|location"
    // es: |país|pais
    "|pa\xc3\xads|pais"
    // ja-JP: |国
    "|\xe5\x9b\xbd"
    // zh-CN: |国家
    "|\xe5\x9b\xbd\xe5\xae\xb6"
    // ko-KR: |국가|나라
    "|\xea\xb5\xad\xea\xb0\x80|\xeb\x82\x98\xeb\x9d\xbc";
const char kZipCodeRe[] =
    "zip|postal|post.*code|pcode|^1z$"
    // de-DE: |postleitzahl
    "|postleitzahl"
    // es: |\bcp\b
    "|\\bcp\\b"
    // fr-FR: |\bcdp\b
    "|\\bcdp\\b"
    // it-IT: |\bcap\b
    "|\\bcap\\b"
    // ja-JP: |郵便番号
    "|\xe9\x83\xb5\xe4\xbe\xbf\xe7\x95\xaa\xe5\x8f\xb7"
    // pt-BR, pt-PT: |codigo|codpos|\bcep\b
    "|codigo|codpos|\\bcep\\b"
    // ru: |Почтовый.?Индекс
    "|\xd0\x9f\xd0\xbe\xd1\x87\xd1\x82\xd0\xbe\xd0\xb2\xd1\x8b\xd0\xb9.?\xd0"
        "\x98\xd0\xbd\xd0\xb4\xd0\xb5\xd0\xba\xd1\x81"
    // zh-CN: |邮政编码|邮编
    "|\xe9\x82\xae\xe6\x94\xbf\xe7\xbc\x96\xe7\xa0\x81|\xe9\x82\xae\xe7\xbc"
        "\x96"
    // zh-TW: |郵遞區號
    "|\xe9\x83\xb5\xe9\x81\x9e\xe5\x8d\x80\xe8\x99\x9f"
    // ko-KR: |우편.?번호
    "|\xec\x9a\xb0\xed\x8e\xb8.?\xeb\xb2\x88\xed\x98\xb8";
const char kZip4Re[] =
    "zip|^-$|post2"
    // pt-BR, pt-PT: |codpos2
    "|codpos2";
const char kCityRe[] =
    "city|town"
    // de-DE: |\bort\b|stadt
    "|\\bort\\b|stadt"
    // en-AU: |suburb
    "|suburb"
    // es: |ciudad|provincia|localidad|poblacion
    "|ciudad|provincia|localidad|poblacion"
    // fr-FR: |ville|commune
    "|ville|commune"
    // it-IT: |localita
    "|localita"
    // ja-JP: |市区町村
    "|\xe5\xb8\x82\xe5\x8c\xba\xe7\x94\xba\xe6\x9d\x91"
    // pt-BR, pt-PT: |cidade
    "|cidade"
    // ru: |Город
    "|\xd0\x93\xd0\xbe\xd1\x80\xd0\xbe\xd0\xb4"
    // zh-CN: |市
    "|\xe5\xb8\x82"
    // zh-TW: |分區
    "|\xe5\x88\x86\xe5\x8d\x80"
    // ko-KR: |^시[^도·・]|시[·・]?군[·・]?구
    "|^\xec\x8b\x9c[^\xeb\x8f\x84\xc2\xb7\xe3\x83\xbb]|\xec\x8b\x9c[\xc2\xb7"
        "\xe3\x83\xbb]?\xea\xb5\xb0[\xc2\xb7\xe3\x83\xbb]?\xea\xb5\xac";
const char kStateRe[] =
    "(?<!united )state|county|region|province"
    // de-DE: |land
    "|land"
    // en-UK: |county|principality
    "|county|principality"
    // ja-JP: |都道府県
    "|\xe9\x83\xbd\xe9\x81\x93\xe5\xba\x9c\xe7\x9c\x8c"
    // pt-BR, pt-PT: |estado|provincia
    "|estado|provincia"
    // ru: |область
    "|\xd0\xbe\xd0\xb1\xd0\xbb\xd0\xb0\xd1\x81\xd1\x82\xd1\x8c"
    // zh-CN: |省
    "|\xe7\x9c\x81"
    // zh-TW: |地區
    "|\xe5\x9c\xb0\xe5\x8d\x80"
    // ko-KR: |^시[·・]?도
    "|^\xec\x8b\x9c[\xc2\xb7\xe3\x83\xbb]?\xeb\x8f\x84";
const char kAddressTypeSameAsRe[] = "same as";
const char kAddressTypeUseMyRe[] = "use my";
const char kBillingDesignatorRe[] = "bill";
const char kShippingDesignatorRe[] = "ship";

/////////////////////////////////////////////////////////////////////////////
// credit_card_field.cc
/////////////////////////////////////////////////////////////////////////////
const char kNameOnCardRe[] =
    "card.?holder|name.?on.?card|ccname|ccfullname|owner"
    // de-DE: |karteninhaber
    "|karteninhaber"
    // es: |nombre.*tarjeta
    "|nombre.*tarjeta"
    // fr-FR: |nom.*carte
    "|nom.*carte"
    // it-IT: |nome.*cart
    "|nome.*cart"
    // ja-JP: |名前
    "|\xe5\x90\x8d\xe5\x89\x8d"
    // ru: |Имя.*карты
    "|\xd0\x98\xd0\xbc\xd1\x8f.*\xd0\xba\xd0\xb0\xd1\x80\xd1\x82\xd1\x8b"
    // zh-CN: |信用卡开户名|开户名|持卡人姓名
    "|\xe4\xbf\xa1\xe7\x94\xa8\xe5\x8d\xa1\xe5\xbc\x80\xe6\x88\xb7\xe5\x90\x8d"
        "|\xe5\xbc\x80\xe6\x88\xb7\xe5\x90\x8d|\xe6\x8c\x81\xe5\x8d\xa1\xe4"
        "\xba\xba\xe5\xa7\x93\xe5\x90\x8d"
    // zh-TW: |持卡人姓名
    "|\xe6\x8c\x81\xe5\x8d\xa1\xe4\xba\xba\xe5\xa7\x93\xe5\x90\x8d";
const char kNameOnCardContextualRe[] =
    "name";
const char kCardNumberRe[] =
    "card.?number|card.?#|card.?no|ccnum|acctnum"
    // de-DE: |nummer
    "|nummer"
    // es: |credito|numero|número
    "|credito|numero|n\xc3\xbamero"
    // fr-FR: |numéro
    "|num\xc3\xa9ro"
    // ja-JP: |カード番号
    "|\xe3\x82\xab\xe3\x83\xbc\xe3\x83\x89\xe7\x95\xaa\xe5\x8f\xb7"
    // ru: |Номер.*карты
    "|\xd0\x9d\xd0\xbe\xd0\xbc\xd0\xb5\xd1\x80.*\xd0\xba\xd0\xb0\xd1\x80\xd1"
        "\x82\xd1\x8b"
    // zh-CN: |信用卡号|信用卡号码
    "|\xe4\xbf\xa1\xe7\x94\xa8\xe5\x8d\xa1\xe5\x8f\xb7|\xe4\xbf\xa1\xe7\x94"
        "\xa8\xe5\x8d\xa1\xe5\x8f\xb7\xe7\xa0\x81"
    // zh-TW: |信用卡卡號
    "|\xe4\xbf\xa1\xe7\x94\xa8\xe5\x8d\xa1\xe5\x8d\xa1\xe8\x99\x9f"
    // ko-KR: |카드
    "|\xec\xb9\xb4\xeb\x93\x9c";
const char kCardCvcRe[] =
    "verification|card identification|security code|cvn|cvv|cvc|csc";

// "Expiration date" is the most common label here, but some pages have
// "Expires", "exp. date" or "exp. month" and "exp. year".  We also look
// for the field names ccmonth and ccyear, which appear on at least 4 of
// our test pages.

// On at least one page (The China Shop2.html) we find only the labels
// "month" and "year".  So for now we match these words directly; we'll
// see if this turns out to be too general.

// Toolbar Bug 51451: indeed, simply matching "month" is too general for
//   https://rps.fidelity.com/ftgw/rps/RtlCust/CreatePIN/Init.
// Instead, we match only words beginning with "month".
const char kExpirationMonthRe[] =
    "expir|exp.*mo|exp.*date|ccmonth"
    // de-DE: |gueltig|gültig|monat
    "|gueltig|g\xc3\xbcltig|monat"
    // es: |fecha
    "|fecha"
    // fr-FR: |date.*exp
    "|date.*exp"
    // it-IT: |scadenza
    "|scadenza"
    // ja-JP: |有効期限
    "|\xe6\x9c\x89\xe5\x8a\xb9\xe6\x9c\x9f\xe9\x99\x90"
    // pt-BR, pt-PT: |validade
    "|validade"
    // ru: |Срок действия карты
    "|\xd0\xa1\xd1\x80\xd0\xbe\xd0\xba \xd0\xb4\xd0\xb5\xd0\xb9\xd1\x81\xd1"
        "\x82\xd0\xb2\xd0\xb8\xd1\x8f \xd0\xba\xd0\xb0\xd1\x80\xd1\x82\xd1\x8b"
    // zh-CN: |月
    "|\xe6\x9c\x88";
const char kExpirationYearRe[] =
    "exp|^/|year"
    // de-DE: |ablaufdatum|gueltig|gültig|yahr
    "|ablaufdatum|gueltig|g\xc3\xbcltig|yahr"
    // es: |fecha
    "|fecha"
    // it-IT: |scadenza
    "|scadenza"
    // ja-JP: |有効期限
    "|\xe6\x9c\x89\xe5\x8a\xb9\xe6\x9c\x9f\xe9\x99\x90"
    // pt-BR, pt-PT: |validade
    "|validade"
    // ru: |Срок действия карты
    "|\xd0\xa1\xd1\x80\xd0\xbe\xd0\xba \xd0\xb4\xd0\xb5\xd0\xb9\xd1\x81\xd1"
        "\x82\xd0\xb2\xd0\xb8\xd1\x8f \xd0\xba\xd0\xb0\xd1\x80\xd1\x82\xd1\x8b"
    // zh-CN: |年|有效期
    "|\xe5\xb9\xb4|\xe6\x9c\x89\xe6\x95\x88\xe6\x9c\x9f";

// This regex is a little bit nasty, but it is simply requiring exactly two
// adjacent y's.
const char kExpirationDate2DigitYearRe[] =
    "exp.*date.*[^y]yy([^y]|$)";
const char kExpirationDateRe[] =
    "expir|exp.*date"
    // de-DE: |gueltig|gültig
    "|gueltig|g\xc3\xbcltig"
    // es: |fecha
    "|fecha"
    // fr-FR: |date.*exp
    "|date.*exp"
    // it-IT: |scadenza
    "|scadenza"
    // ja-JP: |有効期限
    "|\xe6\x9c\x89\xe5\x8a\xb9\xe6\x9c\x9f\xe9\x99\x90"
    // pt-BR, pt-PT: |validade
    "|validade"
    // ru: |Срок действия карты
    "|\xd0\xa1\xd1\x80\xd0\xbe\xd0\xba \xd0\xb4\xd0\xb5\xd0\xb9\xd1\x81\xd1"
        "\x82\xd0\xb2\xd0\xb8\xd1\x8f\xd0\xba\xd0\xb0\xd1\x80\xd1\x82\xd1\x8b";
const char kCardIgnoredRe[] =
    "^card";


/////////////////////////////////////////////////////////////////////////////
// name_field.cc
/////////////////////////////////////////////////////////////////////////////
const char kNameIgnoredRe[] =
    "user.?name|user.?id|nickname|maiden name|title|prefix|suffix"
    // de-DE: |vollständiger.?name
    "|vollst\xc3\xa4ndiger.?name"
    // zh-CN: |用户名
    "|\xe7\x94\xa8\xe6\x88\xb7\xe5\x90\x8d"
    // ko-KR: |(사용자.?)?아이디|사용자.?ID
    "|(\xec\x82\xac\xec\x9a\xa9\xec\x9e\x90.?)?\xec\x95\x84\xec\x9d\xb4\xeb"
        "\x94\x94|\xec\x82\xac\xec\x9a\xa9\xec\x9e\x90.?ID";
const char kNameRe[] =
    "^name|full.?name|your.?name|customer.?name|firstandlastname|bill.?name"
        "|ship.?name"
    // es: |nombre.*y.*apellidos
    "|nombre.*y.*apellidos"
    // fr-FR: |^nom
    "|^nom"
    // ja-JP: |お名前|氏名
    "|\xe3\x81\x8a\xe5\x90\x8d\xe5\x89\x8d|\xe6\xb0\x8f\xe5\x90\x8d"
    // pt-BR, pt-PT: |^nome
    "|^nome"
    // zh-CN: |姓名
    "|\xe5\xa7\x93\xe5\x90\x8d"
    // ko-KR: |성명
    "|\xec\x84\xb1\xeb\xaa\x85";
const char kNameSpecificRe[] =
    "^name"
    // fr-FR: |^nom
    "|^nom"
    // pt-BR, pt-PT: |^nome
    "|^nome";
const char kFirstNameRe[] =
    "first.*name|initials|fname|first$"
    // de-DE: |vorname
    "|vorname"
    // es: |nombre
    "|nombre"
    // fr-FR: |forename|prénom|prenom
    "|forename|pr\xc3\xa9nom|prenom"
    // ja-JP: |名
    "|\xe5\x90\x8d"
    // pt-BR, pt-PT: |nome
    "|nome"
    // ru: |Имя
    "|\xd0\x98\xd0\xbc\xd1\x8f"
    // ko-KR: |이름
    "|\xec\x9d\xb4\xeb\xa6\x84";
const char kMiddleInitialRe[] = "middle.*initial|m\\.i\\.|mi$|\\bmi\\b";
const char kMiddleNameRe[] =
    "middle.*name|mname|middle$"
    // es: |apellido.?materno|lastlastname
    "|apellido.?materno|lastlastname";
const char kLastNameRe[] =
    "last.*name|lname|surname|last$|secondname"
    // de-DE: |nachname
    "|nachname"
    // es: |apellido
    "|apellido"
    // fr-FR: |famille|^nom
    "|famille|^nom"
    // it-IT: |cognome
    "|cognome"
    // ja-JP: |姓
    "|\xe5\xa7\x93"
    // pt-BR, pt-PT: |morada|apelidos|surename|sobrenome
    "|morada|apelidos|surename|sobrenome"
    // ru: |Фамилия
    "|\xd0\xa4\xd0\xb0\xd0\xbc\xd0\xb8\xd0\xbb\xd0\xb8\xd1\x8f"
    // ko-KR: |성[^명]?
    "|\xec\x84\xb1[^\xeb\xaa\x85]?";
