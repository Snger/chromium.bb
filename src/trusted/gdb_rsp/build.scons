# Copyright (c) 2010 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This file needs to be in sync with $SOURCE_ROOT/ppapi/ppapi.gyp
# at the revision specified in $SOURCE_ROOT/native_client/DEPS.

Import('env')

# this is needed for including gdb_utils files
env.Append(CPPPATH=['${SOURCE_ROOT}/gdb_utils/src'])

if env.Bit('windows'):
  env.Append(CPPDEFINES=['WIN32'])
  if env['TARGET_SUBARCH'] == '64':
    env.Append(CPPDEFINES=['WIN64'])

if env['TARGET_ARCHITECTURE'] == 'arm':
  env.Append(CPPDEFINES=['GDB_RSP_ABI_ARM'])

if env['TARGET_ARCHITECTURE'] == 'x86':
  env.Append(CPPDEFINES=['GDB_RSP_ABI_X86'])
  if env['TARGET_SUBARCH'] == '64':
    env.Append(CPPDEFINES=['GDB_RSP_ABI_X86_64'])

rsp_sources = [
    'abi.cc',
    'host.cc',
    'packet.cc',
    'session.cc',
    'target.cc',
    'util.cc',
    ]
    
rsp_test_sources = [
    'abi_test.cc',
    'packet_test.cc',
    'util_test.cc',
    'test.cc'
    ]

# Build only for Win64
if env.Bit('windows'):
  if env['TARGET_SUBARCH'] == '64':
    env.DualLibrary('gdb_rsp', rsp_sources)
    gdb_rsp_test_exe = env.ComponentProgram('gdb_rsp_unittest',
                         rsp_test_sources,
                         EXTRA_LIBS=['gdb_rsp'])

    node = env.CommandTest(
      'gdb_rsp_unittest.out',
      command=[gdb_rsp_test_exe])
    env.AddNodeToTestSuite(node, ['small_tests'], 'run_gdb_rsp_tests')
