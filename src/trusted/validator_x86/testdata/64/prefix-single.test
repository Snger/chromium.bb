@hex:
  # lock add %eax,(%rsp)
  F0 01 04 24
  # mov %edi,%edi
  # lea (%r15,%rdi),%rdi
  # rep stos %eax,%es:(%rdi)
  89 FF
  49 8D 3C 3F
  F3 AB
  # mov %edi,%edi
  # lea (%r15,%rdi),%rdi
  # repne scas %es:(%rdi),%al
  89 FF
  49 8D 3C 3F
  F2 AE
  # mov %ax, %ax
  66 89 C0
  # rex jmp $
  40 EB FD
  # Branch prediction prefixes. (for jz).
  2e 74 02
  3e 74 02
  
  # Forbidden prefixes.
  # rep push %eax
  F3 50
  # mov %edi,%edi
  # lea (%r15,%rdi),%rdi
  # repne stos %eax,%es:(%rdi)
  89 FF
  49 8D 3C 3F
  F2 AB
  # fs mov %eax,%eax
  64 89 C0
  # gs mov %eax,%eax
  65 89 C0
  # mov %eax,%cs:(%rsp)
  2E 89 04 24
  # mov %eax,%ss:(%rsp)
  36 89 04 24
  # mov %eax,%ds:(%rsp)
  3E 89 04 24
  # mov %eax,%es:(%rsp)
  26 89 04 24
  # mov %eax,%fs:(%rsp)
  64 89 04 24
  # mov %eax,%gs:(%rsp)
  65 89 04 24
  # mov %eax,(%esp)
  67 89 04 24
  # cs jmp $
  2E EB FD
  # ss jmp $
  36 EB FD
  # ds jmp $
  3E EB FD
  # es jmp $
  26 EB FD
  # fs jmp $
  64 EB FD
  # gs jmp $
  65 EB FD
  # jmp dword $
  66 EB FD
  # ss jz $
  36 74 02
  # fs jz $
  64 74 02
  # gs jz $
  65 74 02
  # es jz $
  26 74 02
  
  # Mandatory prefix.
  # phaddw %xmm0,%xmm1
  66 0f 38 01 c8
  # addsd %xmm0,%xmm1
  f2 0f 58 c8
  # cmpeqss %xmm0,%xmm1
  f3 0f c2 c8 00
@rval:
  VALIDATOR: 0000000000000020: f3 50                                        push %rax
  VALIDATOR: ERROR: Use of REP (F3) prefix for instruction not allowed by Native Client
  VALIDATOR: 0000000000000028: f2 ab                                        stosd [%rdi]
  VALIDATOR: ERROR: Use of REPNE (F2) prefix for instruction not allowed by Native Client
  VALIDATOR: 000000000000002a: 64 89 c0                                     mov %eax, %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 000000000000002d: 65 89 c0                                     mov %eax, %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000030: 2e 89 04 24                                  mov [%rsp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000034: 36 89 04 24                                  mov [%rsp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000038: 3e 89 04 24                                  mov [%rsp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 000000000000003c: 26 89 04 24                                  mov [%rsp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000040: 64 89 04 24                                  mov %fs:[%rsp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000040: 64 89 04 24                                  mov %fs:[%rsp], %eax
  VALIDATOR: ERROR: Segment memory reference not allowed
  VALIDATOR: 0000000000000044: 65 89 04 24                                  mov %gs:[%rsp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000044: 65 89 04 24                                  mov %gs:[%rsp], %eax
  VALIDATOR: ERROR: Segment memory reference not allowed
  VALIDATOR: 0000000000000048: 67 89 04 24                                  mov [%esp], %eax
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000048: 67 89 04 24                                  mov [%esp], %eax
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: 000000000000004c: 2e eb fd                                     jmp 0x4c
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 000000000000004f: 36 eb fd                                     jmp 0x4f
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000052: 3e eb fd                                     jmp 0x52
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000055: 26 eb fd                                     jmp 0x55
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000058: 64 eb fd                                     jmp 0x58
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 000000000000005b: 65 eb fd                                     jmp 0x5b
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 000000000000005e: 66 eb fd                                     jmp 0x5e
  VALIDATOR: ERROR: Use of DATA16 (66) prefix for instruction not allowed by Native Client
  VALIDATOR: 0000000000000061: 36 74 02                                     jz 0x66
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000064: 64 74 02                                     jz 0x69
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000067: 65 74 02                                     jz 0x6c
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 000000000000006a: 26 74 02                                     jz 0x6f
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: Checking jump targets: 0 to 7b
  VALIDATOR: ERROR: 1f: Bad jump target
  VALIDATOR: ERROR: 66: Bad jump target
  VALIDATOR: ERROR: 69: Bad jump target
  VALIDATOR: ERROR: 6c: Bad jump target
  VALIDATOR: ERROR: 6f: Bad jump target
  VALIDATOR: Checking that basic blocks are aligned
  VALIDATOR: ERROR: 60: Bad basic block alignment.
  *** <input> IS UNSAFE ***
@rvald:
  VALIDATOR: 0000000000000020: f3 50                                        push %rax
  VALIDATOR: ERROR: Use of REP (F3) prefix for instruction not allowed by Native Client
  VALIDATOR: 0000000000000028: f2 ab                                        stosd [%rdi]
  VALIDATOR: ERROR: Use of REPNE (F2) prefix for instruction not allowed by Native Client
  VALIDATOR: 000000000000002a: 64 89 c0                                     mov %eax, %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 000000000000002d: 65 89 c0                                     mov %eax, %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000030: 2e 89 04 24                                  mov [%rsp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000034: 36 89 04 24                                  mov [%rsp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000038: 3e 89 04 24                                  mov [%rsp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 000000000000003c: 26 89 04 24                                  mov [%rsp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000040: 64 89 04 24                                  mov %fs:[%rsp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000040: 64 89 04 24                                  mov %fs:[%rsp], %eax
  VALIDATOR: ERROR: Segment memory reference not allowed
  VALIDATOR: 0000000000000044: 65 89 04 24                                  mov %gs:[%rsp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000044: 65 89 04 24                                  mov %gs:[%rsp], %eax
  VALIDATOR: ERROR: Segment memory reference not allowed
  VALIDATOR: 0000000000000048: 67 89 04 24                                  mov [%esp], %eax
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000048: 67 89 04 24                                  mov [%esp], %eax
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: 000000000000004c: 2e eb fd                                     jmp 0x4c
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 000000000000004f: 36 eb fd                                     jmp 0x4f
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000052: 3e eb fd                                     jmp 0x52
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000055: 26 eb fd                                     jmp 0x55
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000058: 64 eb fd                                     jmp 0x58
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 000000000000005b: 65 eb fd                                     jmp 0x5b
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 000000000000005e: 66 eb fd                                     jmp 0x5e
  VALIDATOR: ERROR: Use of DATA16 (66) prefix for instruction not allowed by Native Client
  VALIDATOR: 0000000000000061: 36 74 02                                     jz 0x66
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000064: 64 74 02                                     jz 0x69
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000067: 65 74 02                                     jz 0x6c
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 000000000000006a: 26 74 02                                     jz 0x6f
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: Checking block alignment and jump targets: 0 to 7b
  VALIDATOR: 000000000000001a: 2e 74 02                                     jz 0x1f
  VALIDATOR: ERROR: Doesn't jump to instruction address
  VALIDATOR: 000000000000005e: 66 eb fd                                     jmp 0x5e
  VALIDATOR: ERROR: Instruction crosses basic block alignment
  VALIDATOR: 0000000000000061: 36 74 02                                     jz 0x66
  VALIDATOR: ERROR: Doesn't jump to instruction address
  VALIDATOR: 0000000000000064: 64 74 02                                     jz 0x69
  VALIDATOR: ERROR: Doesn't jump to instruction address
  VALIDATOR: 0000000000000067: 65 74 02                                     jz 0x6c
  VALIDATOR: ERROR: Doesn't jump to instruction address
  VALIDATOR: 000000000000006a: 26 74 02                                     jz 0x6f
  VALIDATOR: ERROR: Doesn't jump to instruction address
  *** <input> IS UNSAFE ***
@vd-rval:
  VALIDATOR: 0000000000000020: f3 50                                        push %rax
  VALIDATOR: ERROR: Use of REP (F3) prefix for instruction not allowed by Native Client
  VALIDATOR: 0000000000000028: f2 ab                                        [P] dontcare [%rdi] (s), %eax (u)
  VALIDATOR: ERROR: Use of REPNE (F2) prefix for instruction not allowed by Native Client
  VALIDATOR: 000000000000002a: 64 89 c0                                     mov %eax, %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 000000000000002d: 65 89 c0                                     mov %eax, %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000030: 2e 89 04 24                                  mov [%rsp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000034: 36 89 04 24                                  mov [%rsp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000038: 3e 89 04 24                                  mov [%rsp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 000000000000003c: 26 89 04 24                                  mov [%rsp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000040: 64 89 04 24                                  mov %fs:[%rsp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000040: 64 89 04 24                                  mov %fs:[%rsp], %eax
  VALIDATOR: ERROR: Segment memory reference not allowed
  VALIDATOR: 0000000000000044: 65 89 04 24                                  mov %gs:[%rsp], %eax
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000044: 65 89 04 24                                  mov %gs:[%rsp], %eax
  VALIDATOR: ERROR: Segment memory reference not allowed
  VALIDATOR: 0000000000000048: 67 89 04 24                                  mov [%esp], %eax
  VALIDATOR: ERROR: Use of 67 (ADDR16) prefix not allowed by Native Client
  VALIDATOR: 0000000000000048: 67 89 04 24                                  mov [%esp], %eax
  VALIDATOR: ERROR: Assignment to non-64 bit memory address
  VALIDATOR: 000000000000004c: 2e eb fd                                     [P] dontcarejump %rip (s), 0x4c (u)
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 000000000000004f: 36 eb fd                                     [P] dontcarejump %rip (s), 0x4f (u)
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000052: 3e eb fd                                     [P] dontcarejump %rip (s), 0x52 (u)
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000055: 26 eb fd                                     [P] dontcarejump %rip (s), 0x55 (u)
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000058: 64 eb fd                                     [P] dontcarejump %rip (s), 0x58 (u)
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 000000000000005b: 65 eb fd                                     [P] dontcarejump %rip (s), 0x5b (u)
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 000000000000005e: 66 eb fd                                     [P] dontcarejump %rip (s), 0x5e (u)
  VALIDATOR: ERROR: Use of DATA16 (66) prefix for instruction not allowed by Native Client
  VALIDATOR: 0000000000000061: 36 74 02                                     [P] dontcarecondjump %rip (s), 0x66 (u)
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000064: 64 74 02                                     [P] dontcarecondjump %rip (s), 0x69 (u)
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 0000000000000067: 65 74 02                                     [P] dontcarecondjump %rip (s), 0x6c (u)
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: 000000000000006a: 26 74 02                                     [P] dontcarecondjump %rip (s), 0x6f (u)
  VALIDATOR: ERROR: Uses a segment prefix byte not allowed by Native Client
  VALIDATOR: Checking jump targets: 0 to 7b
  VALIDATOR: ERROR: 1f: Bad jump target
  VALIDATOR: ERROR: 66: Bad jump target
  VALIDATOR: ERROR: 69: Bad jump target
  VALIDATOR: ERROR: 6c: Bad jump target
  VALIDATOR: ERROR: 6f: Bad jump target
  VALIDATOR: Checking that basic blocks are aligned
  VALIDATOR: ERROR: 60: Bad basic block alignment.
  *** <input> IS UNSAFE ***
@dis:
  0000000000000000: f0 01 04 24                                  add [%rsp], %eax
  0000000000000004: 89 ff                                        mov %edi, %edi
  0000000000000006: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  000000000000000a: f3 ab                                        stosd [%rdi]
  000000000000000c: 89 ff                                        mov %edi, %edi
  000000000000000e: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  0000000000000012: f2 ae                                        scasb [%rdi]
  0000000000000014: 66 89 c0                                     mov %ax, %ax
  0000000000000017: 40 eb fd                                     jmp 0x17
  000000000000001a: 2e 74 02                                     jz 0x1f
  000000000000001d: 3e 74 02                                     jz 0x22
  0000000000000020: f3 50                                        push %rax
  0000000000000022: 89 ff                                        mov %edi, %edi
  0000000000000024: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  0000000000000028: f2 ab                                        stosd [%rdi]
  000000000000002a: 64 89 c0                                     mov %eax, %eax
  000000000000002d: 65 89 c0                                     mov %eax, %eax
  0000000000000030: 2e 89 04 24                                  mov [%rsp], %eax
  0000000000000034: 36 89 04 24                                  mov [%rsp], %eax
  0000000000000038: 3e 89 04 24                                  mov [%rsp], %eax
  000000000000003c: 26 89 04 24                                  mov [%rsp], %eax
  0000000000000040: 64 89 04 24                                  mov %fs:[%rsp], %eax
  0000000000000044: 65 89 04 24                                  mov %gs:[%rsp], %eax
  0000000000000048: 67 89 04 24                                  mov [%esp], %eax
  000000000000004c: 2e eb fd                                     jmp 0x4c
  000000000000004f: 36 eb fd                                     jmp 0x4f
  0000000000000052: 3e eb fd                                     jmp 0x52
  0000000000000055: 26 eb fd                                     jmp 0x55
  0000000000000058: 64 eb fd                                     jmp 0x58
  000000000000005b: 65 eb fd                                     jmp 0x5b
  000000000000005e: 66 eb fd                                     jmp 0x5e
  0000000000000061: 36 74 02                                     jz 0x66
  0000000000000064: 64 74 02                                     jz 0x69
  0000000000000067: 65 74 02                                     jz 0x6c
  000000000000006a: 26 74 02                                     jz 0x6f
  000000000000006d: 66 0f 38 01 c8                               phaddw %xmm1, %xmm0
  0000000000000072: f2 0f 58 c8                                  addsd %xmm1, %xmm0
  0000000000000076: f3 0f c2 c8 00                               cmpss %xmm1, %xmm0, 0x0
@vdis:
  0000000000000000: f0 01 04 24                                  add [%rsp], %eax
  0000000000000004: 89 ff                                        mov %edi, %edi
  0000000000000006: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  000000000000000a: f3 ab                                        [P] dontcare [%rdi] (s), %eax (u)
  000000000000000c: 89 ff                                        mov %edi, %edi
  000000000000000e: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  0000000000000012: f2 ae                                        [P] dontcare %al (u), [%rdi] (u)
  0000000000000014: 66 89 c0                                     mov %ax, %ax
  0000000000000017: 40 eb fd                                     [P] dontcarejump %rip (s), 0x17 (u)
  000000000000001a: 2e 74 02                                     [P] dontcarecondjump %rip (s), 0x1f (u)
  000000000000001d: 3e 74 02                                     [P] dontcarecondjump %rip (s), 0x22 (u)
  0000000000000020: f3 50                                        push %rax
  0000000000000022: 89 ff                                        mov %edi, %edi
  0000000000000024: 49 8d 3c 3f                                  lea %rdi, [%r15+%rdi*1]
  0000000000000028: f2 ab                                        [P] dontcare [%rdi] (s), %eax (u)
  000000000000002a: 64 89 c0                                     mov %eax, %eax
  000000000000002d: 65 89 c0                                     mov %eax, %eax
  0000000000000030: 2e 89 04 24                                  mov [%rsp], %eax
  0000000000000034: 36 89 04 24                                  mov [%rsp], %eax
  0000000000000038: 3e 89 04 24                                  mov [%rsp], %eax
  000000000000003c: 26 89 04 24                                  mov [%rsp], %eax
  0000000000000040: 64 89 04 24                                  mov %fs:[%rsp], %eax
  0000000000000044: 65 89 04 24                                  mov %gs:[%rsp], %eax
  0000000000000048: 67 89 04 24                                  mov [%esp], %eax
  000000000000004c: 2e eb fd                                     [P] dontcarejump %rip (s), 0x4c (u)
  000000000000004f: 36 eb fd                                     [P] dontcarejump %rip (s), 0x4f (u)
  0000000000000052: 3e eb fd                                     [P] dontcarejump %rip (s), 0x52 (u)
  0000000000000055: 26 eb fd                                     [P] dontcarejump %rip (s), 0x55 (u)
  0000000000000058: 64 eb fd                                     [P] dontcarejump %rip (s), 0x58 (u)
  000000000000005b: 65 eb fd                                     [P] dontcarejump %rip (s), 0x5b (u)
  000000000000005e: 66 eb fd                                     [P] dontcarejump %rip (s), 0x5e (u)
  0000000000000061: 36 74 02                                     [P] dontcarecondjump %rip (s), 0x66 (u)
  0000000000000064: 64 74 02                                     [P] dontcarecondjump %rip (s), 0x69 (u)
  0000000000000067: 65 74 02                                     [P] dontcarecondjump %rip (s), 0x6c (u)
  000000000000006a: 26 74 02                                     [P] dontcarecondjump %rip (s), 0x6f (u)
  000000000000006d: 66 0f 38 01 c8                               [P] dontcare %xmm0 (u)
  0000000000000072: f2 0f 58 c8                                  [P] dontcare %xmm0 (u)
  0000000000000076: f3 0f c2 c8 00                               [P] dontcare %xmm0 (u), 0x0 (u)
