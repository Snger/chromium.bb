@hex:
  # Bad example of using lea solution (instead of add) to update rbp.
  # That is where we use rsp in address instead of rbp.
  #    mov %ebp, %ecx
  #    lea %rbp, [%rsp+%r15*1]
  89 cd
  4a 8d 2c 3c
@val:
  VALIDATOR: 0000000000000002: 4a 8d 2c 3c                                  lea %rbp, [%rsp+%r15*1]
  VALIDATOR: ERROR: Illegal change to register RBP
  VALIDATOR: 0000000000000000: 89 cd                                        mov %ebp, %ecx
  VALIDATOR: ERROR: Illegal assignment to EBP
  VALIDATOR: Checking jump targets: 0 to 6
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@rval:
  VALIDATOR: 0000000000000002: 4a 8d 2c 3c                                  lea %rbp, [%rsp+%r15*1]
  VALIDATOR: ERROR: Illegal change to register RBP
  VALIDATOR: 0000000000000000: 89 cd                                        mov %ebp, %ecx
  VALIDATOR: ERROR: Illegal assignment to EBP
  VALIDATOR: Checking jump targets: 0 to 6
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@rvald:
  VALIDATOR: 0000000000000002: 4a 8d 2c 3c                                  lea %rbp, [%rsp+%r15*1]
  VALIDATOR: ERROR: Illegal change to register RBP
  VALIDATOR: 0000000000000000: 89 cd                                        mov %ebp, %ecx
  VALIDATOR: ERROR: Illegal assignment to EBP
  VALIDATOR: Checking block alignment and jump targets: 0 to 6
  *** <input> IS UNSAFE ***
@vd-rval:
  VALIDATOR: 0000000000000002: 4a 8d 2c 3c                                  lea %rbp, [%rsp+%r15*1]
  VALIDATOR: ERROR: Illegal change to register RBP
  VALIDATOR: 0000000000000000: 89 cd                                        mov %ebp, %ecx
  VALIDATOR: ERROR: Illegal assignment to EBP
  VALIDATOR: Checking jump targets: 0 to 6
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@dis:
  0000000000000000: 89 cd                                        mov %ebp, %ecx
  0000000000000002: 4a 8d 2c 3c                                  lea %rbp, [%rsp+%r15*1]
@vdis:
  0000000000000000: 89 cd                                        mov %ebp, %ecx
  0000000000000002: 4a 8d 2c 3c                                  lea %rbp, [%rsp+%r15*1]
