@hex:
  # Disallowed (see http://code.google.com/p/nativeclient/issues/detail?id=3081)
  # mov %esp, %ebp
  89 e5
  # lea (%r15, %rbp), %rbp
  49 8d 2c 2f
  
  # Allowed nonetheless
  # mov %esp, %ebp
  89 e5
  # lea 0x00(%rbp, %r15), %rbp
  4a 8d 6c 3d 00
  
  # Disallowed (non-zero offset)
  # mov %esp, %ebp
  89 e5
  # lea 0x42(%rbp, %r15), %rbp
  4a 8d 6c 3d 42
  
  # Allowed
  # mov %esp, %ebp
  89 e5
  # lea 0x00000000(%rbp, %r15), %rbp
  4a 8d ac 3d 00 00 00 00
@rval:
  VALIDATOR: 0000000000000002: 49 8d 2c 2f                                  lea %rbp, [%r15+%rbp*1]
  VALIDATOR: ERROR: Illegal change to register RBP
  VALIDATOR: 0000000000000000: 89 e5                                        mov %ebp, %esp
  VALIDATOR: ERROR: Illegal assignment to EBP
  VALIDATOR: 000000000000000f: 4a 8d 6c 3d 42                               lea %rbp, [%rbp+%r15*1+0x42]
  VALIDATOR: ERROR: Illegal change to register RBP
  VALIDATOR: 000000000000000d: 89 e5                                        mov %ebp, %esp
  VALIDATOR: ERROR: Illegal assignment to EBP
  VALIDATOR: Checking jump targets: 0 to 1e
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> IS UNSAFE ***
@dis:
  0000000000000000: 89 e5                                        mov %ebp, %esp
  0000000000000002: 49 8d 2c 2f                                  lea %rbp, [%r15+%rbp*1]
  0000000000000006: 89 e5                                        mov %ebp, %esp
  0000000000000008: 4a 8d 6c 3d 00                               lea %rbp, [%rbp+%r15*1]
  000000000000000d: 89 e5                                        mov %ebp, %esp
  000000000000000f: 4a 8d 6c 3d 42                               lea %rbp, [%rbp+%r15*1+0x42]
  0000000000000014: 89 e5                                        mov %ebp, %esp
  0000000000000016: 4a 8d ac 3d 00 00 00 00                      lea %rbp, [%rbp+%r15*1]
@rdfa_output:
  2: [0] improper %rbp sandboxing
  2: [0] error - %bpl or %bp is changed
  f: [0] improper %rbp sandboxing
  f: [0] error - %bpl or %bp is changed
  return code: 1
@validators_disagree:
  errors reported by old validator but not by rdfa one:
    0x0 (rdfa reported only 0x2)
    0xd (rdfa reported only 0xf)
----------------------------------------------------------------------
@hex:
  # Fine (because it's add)
  # mov %esp, %ebp
  89 e5
  # add %r15, %rbp
  4c 01 fd
  
  # Also fine (because it's sp)
  # mov %ebp, %esp
  89 ec
  # lea (%rsp, %r15), %rsp
  4a 8d 24 3c
@rval:
  VALIDATOR: Checking jump targets: 0 to b
  VALIDATOR: Checking that basic blocks are aligned
  *** <input> is safe ***
@dis:
  0000000000000000: 89 e5                                        mov %ebp, %esp
  0000000000000002: 4c 01 fd                                     add %rbp, %r15
  0000000000000005: 89 ec                                        mov %esp, %ebp
  0000000000000007: 4a 8d 24 3c                                  lea %rsp, [%rsp+%r15*1]
@rdfa_output:
  return code: 0
