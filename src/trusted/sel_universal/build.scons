# -*- python -*-
# Copyright 2009 The Native Client Authors.  All rights reserved.
# Use of this source code is governed by a BSD-style license that can
# be found in the LICENSE file.


Import('env')

if env.CrossToolsBuild():
  Return()

sdl_multimedia_srcs = []
if env.Bit('sdl_sel_universal'):
  # only linux-x86-64 support so far
  if not env.Bit('host_linux') or not 'x86-64' == env['BUILD_FULLARCH']:
    import sys
    print
    print   "SORRY, SDL ENHANCED SEL_UNIVERSAL ONLY ON"
    print   "linux-x86-64 for now"
    print
    sys.exit(-1)
  env.Append(CPPDEFINES=['NACL_SEL_UNIVERSAL_INCLUDE_SDL'])
  env.Append(LIBS=['SDL'])
  env.Append(LIBS=['SDLmain'])

  sdl_multimedia_srcs.append('multimedia_handler.cc')
  sdl_multimedia_srcs.append('sdl_ppapi_event_translator.cc')
  sdl_multimedia_srcs.append('multimedia_sdl.cc')


# NOTE: Probably because of GetPluginDir()
if env.Bit('linux') and env.Bit('target_x86'):
  env.Append(LIBS=['dl'])

# NOTE: we need Cocoa because of the GetPluginDir() implementation
#       on mac (nonnacl_util_c)
env.ComponentProgram('sel_universal',
                    ['sel_universal.cc',
                     'rpc_universal.cc',
                     'pepper_handler.cc',
                     'replay_handler.cc',
                     'parsing.cc',
                     'rpc_universal_system.cc',
                     ] + sdl_multimedia_srcs,
                    EXTRA_LIBS=['nonnacl_util',
                                'nonnacl_srpc',
                                'nrd_xfer',
                                'nacl_base',
                                'platform',
                                'gio',
                                'imc',
                                'env_cleanser',
                                ],
                    FRAMEWORKS=['Cocoa'],
                    )
