# -*- python -*-
# Copyright (c) 2011 The Native Client Authors.  All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.


Import('env')


if env.CrossToolsBuild():
  Return()


def ErrorUnsupportedPlatform(env):
  import sys
  print
  print   "SORRY, SEL_UNIVERSAL/SDL NOT SUPPORTED FOR THIS PLATFORM"
  print
  sys.exit(-1)


def EnvSDLUpdateLinux(env):
  import platform
  # NOTE: you can obtain SDL headers and libs on Ubuntu via:
  # sudo apt-get install libsdl1.2-dev
  env.Append(CPPDEFINES=['NACL_SEL_UNIVERSAL_INCLUDE_SDL'])
    # NOTE: SDLmain.a is a dummy on linux
  env.Append(LIBS=['SDL'])
  # When building a 32bit sel_universal with SDL for a 64bit system, do
  # sudo apt-get install ia32-libs
  # first which populates /usr/lib32/
  # Also: there is no /usr/lib32//libSDL.so only  /usr/lib32//libSDL-1.2.so
  if ('x86-32' == env['BUILD_FULLARCH'] and
      platform.architecture()[0] == '64bit'):
    env.FilterOut(LIBS=['SDL'])
    env.Append(LIBS=['SDL-1.2'])
    env.Append(LIBPATH=['/usr/lib32'])


sdl_multimedia_srcs = []
if env.Bit('sdl_sel_universal'):
  if env.Bit('host_linux'):
    EnvSDLUpdateLinux(env)
  else:
    ErrorUnsupportedPlatform(env)

  sdl_multimedia_srcs.append('multimedia_handler.cc')
  sdl_multimedia_srcs.append('sdl_ppapi_event_translator.cc')
  sdl_multimedia_srcs.append('multimedia_sdl.cc')


# NOTE: Probably because of GetPluginDir()
if env.Bit('linux') and env.Bit('target_x86'):
  env.Append(LIBS=['dl'])

# NOTE: we need Cocoa because of the GetPluginDir() implementation
#       on mac (nonnacl_util_c)
env.ComponentProgram('sel_universal',
                    ['sel_universal.cc',
                     'rpc_universal.cc',
                     'file_handler.cc',
                     'pepper_handler.cc',
                     'postmessage_handler.cc',
                     'replay_handler.cc',
                     'parsing.cc',
                     'rpc_universal_system.cc',
                     ] + sdl_multimedia_srcs,
                    EXTRA_LIBS=['nonnacl_util',
                                'nonnacl_srpc',
                                'reverse_service',
                                'simple_service',
                                'thread_interface',
                                'nrd_xfer',
                                'nacl_base',
                                'platform',
                                'gio',
                                'imc',
                                'env_cleanser',
                                'nacl_error_code',
                                ],
                    FRAMEWORKS=['Cocoa'],
                    )
