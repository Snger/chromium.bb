# Copyright (c) 2010 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This file needs to be in sync with $SOURCE_ROOT/ppapi/ppapi.gyp
# at the revision specified in $SOURCE_ROOT/native_client/DEPS.

Import('env')

# Don't treat warnings as errors on Windows
if env.Bit('windows'):
  env.FilterOut(CCFLAGS=['/WX'])

cpp_sources = [
    # from ppapi.gyp:ppapi_cpp_objects
    '$SOURCE_ROOT/ppapi/cpp/core.cc',
    '$SOURCE_ROOT/ppapi/cpp/graphics_2d.cc',
    '$SOURCE_ROOT/ppapi/cpp/image_data.cc',
    '$SOURCE_ROOT/ppapi/cpp/instance.cc',
    '$SOURCE_ROOT/ppapi/cpp/module.cc',
    '$SOURCE_ROOT/ppapi/cpp/paint_aggregator.cc',
    '$SOURCE_ROOT/ppapi/cpp/paint_manager.cc',
    '$SOURCE_ROOT/ppapi/cpp/rect.cc',
    '$SOURCE_ROOT/ppapi/cpp/resource.cc',
    '$SOURCE_ROOT/ppapi/cpp/scriptable_object.cc',
    '$SOURCE_ROOT/ppapi/cpp/var.cc',
    # Dev interfaces.
    '$SOURCE_ROOT/ppapi/cpp/dev/audio_config_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/audio_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/buffer_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/directory_entry_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/directory_reader_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/file_chooser_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/file_io_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/file_ref_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/file_system_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/font_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/graphics_3d_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/scrollbar_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/url_loader_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/url_request_info_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/url_response_info_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/url_util_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/video_decoder_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/widget_dev.cc',
    # from ppapi.gyp::ppapi_cpp
    '$SOURCE_ROOT/ppapi/cpp/ppp_entrypoints.cc',
    ]

env.DualLibrary('ppapi_cpp', cpp_sources)
