# Copyright (c) 2010 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This file needs to be in sync with $SOURCE_ROOT/ppapi/ppapi.gyp
# at the revision specified in $SOURCE_ROOT/native_client/DEPS.

Import('env')

cpp_sources = [
    # from ppapi.gyp:ppapi_cpp_objects
    '$SOURCE_ROOT/ppapi/cpp/core.cc',
    '$SOURCE_ROOT/ppapi/cpp/graphics_2d.cc',
    '$SOURCE_ROOT/ppapi/cpp/image_data.cc',
    '$SOURCE_ROOT/ppapi/cpp/instance.cc',
    '$SOURCE_ROOT/ppapi/cpp/module.cc',
    '$SOURCE_ROOT/ppapi/cpp/paint_aggregator.cc',
    '$SOURCE_ROOT/ppapi/cpp/paint_manager.cc',
    '$SOURCE_ROOT/ppapi/cpp/rect.cc',
    '$SOURCE_ROOT/ppapi/cpp/resource.cc',
    '$SOURCE_ROOT/ppapi/cpp/scriptable_object.cc',
    '$SOURCE_ROOT/ppapi/cpp/var.cc',
    # Dev interfaces.
    '$SOURCE_ROOT/ppapi/cpp/dev/audio_config_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/audio_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/buffer_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/directory_entry_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/directory_reader_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/file_chooser_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/file_io_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/file_ref_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/file_system_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/font_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/graphics_3d_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/scrollbar_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/url_loader_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/url_request_info_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/url_response_info_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/url_util_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/video_decoder_dev.cc',
    '$SOURCE_ROOT/ppapi/cpp/dev/widget_dev.cc',
    # from ppapi.gyp::ppapi_cpp
    '$SOURCE_ROOT/ppapi/cpp/ppp_entrypoints.cc',
    ]

env.ComponentLibrary('ppapi_cpp', cpp_sources)

c_headers = [
    # from ppapi.gyp:ppapi_c
    '$SOURCE_ROOT/ppapi/c/pp_completion_callback.h',
    '$SOURCE_ROOT/ppapi/c/pp_errors.h',
    '$SOURCE_ROOT/ppapi/c/pp_event.h',
    '$SOURCE_ROOT/ppapi/c/pp_instance.h',
    '$SOURCE_ROOT/ppapi/c/pp_module.h',
    '$SOURCE_ROOT/ppapi/c/pp_point.h',
    '$SOURCE_ROOT/ppapi/c/pp_rect.h',
    '$SOURCE_ROOT/ppapi/c/pp_resource.h',
    '$SOURCE_ROOT/ppapi/c/pp_size.h',
    '$SOURCE_ROOT/ppapi/c/pp_stdint.h',
    '$SOURCE_ROOT/ppapi/c/pp_var.h',
    '$SOURCE_ROOT/ppapi/c/ppb.h',
    '$SOURCE_ROOT/ppapi/c/ppb_core.h',
    '$SOURCE_ROOT/ppapi/c/ppb_image_data.h',
    '$SOURCE_ROOT/ppapi/c/ppb_instance.h',
    '$SOURCE_ROOT/ppapi/c/ppb_var.h',
    '$SOURCE_ROOT/ppapi/c/ppp.h',
    '$SOURCE_ROOT/ppapi/c/ppp_class.h',
    '$SOURCE_ROOT/ppapi/c/ppp_instance.h',
    # Dev interfaces.
    '$SOURCE_ROOT/ppapi/c/dev/pp_cursor_type_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/pp_file_info_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/pp_video_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppb_audio_config_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppb_audio_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppb_audio_trusted_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppb_buffer_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppb_char_set_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppb_cursor_control_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppb_directory_reader_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppb_file_chooser_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppb_file_io_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppb_file_io_trusted_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppb_file_ref_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppb_file_system_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppb_find_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppb_font_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppb_graphics_2d_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppb_graphics_3d_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppb_opengles_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppb_scrollbar_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppb_testing_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppb_url_loader_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppb_url_request_info_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppb_url_response_info_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppb_url_util_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppb_video_decoder_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppp_cursor_control_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppp_find_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppp_graphics_3d_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppp_printing_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppp_widget_dev.h',
    '$SOURCE_ROOT/ppapi/c/dev/ppp_zoom_dev.h',
    ]

cpp_headers = [
    # from  ppapi.gyp:ppapi_cpp_objects
    '$SOURCE_ROOT/ppapi/cpp/completion_callback.h',
    '$SOURCE_ROOT/ppapi/cpp/core.h',
    '$SOURCE_ROOT/ppapi/cpp/graphics_2d.h',
    '$SOURCE_ROOT/ppapi/cpp/image_data.h',
    '$SOURCE_ROOT/ppapi/cpp/instance.h',
    '$SOURCE_ROOT/ppapi/cpp/module.h',
    '$SOURCE_ROOT/ppapi/cpp/module_impl.h',
    '$SOURCE_ROOT/ppapi/cpp/paint_aggregator.h',
    '$SOURCE_ROOT/ppapi/cpp/paint_manager.h',
    '$SOURCE_ROOT/ppapi/cpp/point.h',
    '$SOURCE_ROOT/ppapi/cpp/rect.h',
    '$SOURCE_ROOT/ppapi/cpp/resource.h',
    '$SOURCE_ROOT/ppapi/cpp/scriptable_object.h',
    '$SOURCE_ROOT/ppapi/cpp/size.h',
    '$SOURCE_ROOT/ppapi/cpp/var.h',
    # Dev interfaces.
    '$SOURCE_ROOT/ppapi/cpp/dev/audio_config_dev.h',
    '$SOURCE_ROOT/ppapi/cpp/dev/audio_dev.h',
    '$SOURCE_ROOT/ppapi/cpp/dev/buffer_dev.h',
    '$SOURCE_ROOT/ppapi/cpp/dev/directory_entry_dev.h',
    '$SOURCE_ROOT/ppapi/cpp/dev/directory_reader_dev.h',
    '$SOURCE_ROOT/ppapi/cpp/dev/file_chooser_dev.h',
    '$SOURCE_ROOT/ppapi/cpp/dev/file_io_dev.h',
    '$SOURCE_ROOT/ppapi/cpp/dev/file_ref_dev.h',
    '$SOURCE_ROOT/ppapi/cpp/dev/file_system_dev.h',
    '$SOURCE_ROOT/ppapi/cpp/dev/font_dev.h',
    '$SOURCE_ROOT/ppapi/cpp/dev/graphics_3d_dev.h',
    '$SOURCE_ROOT/ppapi/cpp/dev/scrollbar_dev.h',
    '$SOURCE_ROOT/ppapi/cpp/dev/url_loader_dev.h',
    '$SOURCE_ROOT/ppapi/cpp/dev/url_request_info_dev.h',
    '$SOURCE_ROOT/ppapi/cpp/dev/url_response_info_dev.h',
    '$SOURCE_ROOT/ppapi/cpp/dev/url_util_dev.h',
    '$SOURCE_ROOT/ppapi/cpp/dev/video_decoder_dev.h',
    '$SOURCE_ROOT/ppapi/cpp/dev/widget_dev.h',
    # from  ppapi.gyp:ppapi_cpp
    '$SOURCE_ROOT/ppapi/cpp/module_embedder.h'
    ]

header_install = env.AddHeaderToSdk(c_headers + cpp_headers)
env.AddLibraryToSdk(['ppapi_cpp'])
env.Requires('ppapi_cpp', header_install)
