# -*- python -*-
# Copyright 2011 The Native Client Authors.  All rights reserved.
# Use of this source code is governed by a BSD-style license that can
# be found in the LICENSE file.

import os
import gyp_extract

Import('env')

# Underlay $SOURCE_ROOT/ppapi in this directory.
Dir('.').addRepository(Dir('#/../ppapi'))

# TODO(ncbray): reenable
# http://code.google.com/p/nativeclient/issues/detail?id=1643
env.FilterOut(CCFLAGS=['-Wswitch-enum'])

# Load ppapi_cpp.gypi
ppapi_cpp_gypi = gyp_extract.LoadGypFile(
    env.File('#/../ppapi/ppapi_cpp.gypi').path)

# From ppapi_cpp.gypi:ppapi_cpp_objects:.*\.cc
# From ppapi_cpp.gypi:ppapi_cpp:.*\.cc
cpp_sources = (
    gyp_extract.GypTargetSources(
        ppapi_cpp_gypi, 'ppapi_cpp_objects', '.*\.cc') +
    gyp_extract.GypTargetSources(
        ppapi_cpp_gypi, 'ppapi_cpp', '.*\.cc')
)
env.NaClSdkLibrary('ppapi_cpp', cpp_sources, LIBS=['nacl'])


env.Append(CPPPATH=[
    '$SOURCE_ROOT/ppapi/lib/gl/gles2'])

# Load ppapi_gl.gypi
ppapi_gl_gypi = gyp_extract.LoadGypFile(
    env.File('#/../ppapi/ppapi_gl.gypi').path)

# From ppapi_gl.gypi:ppapi_gles2:.*\.c
gles2_sources = gyp_extract.GypTargetSources(
    ppapi_gl_gypi, 'ppapi_gles2', '.*\.c')
env.NaClSdkLibrary('ppapi_gles2', gles2_sources, LIBS=['nacl'])


# From ppapi_cpp.gypi:ppapi_c:c/[^/]*\.h
c_headers = gyp_extract.GypTargetSources(
    ppapi_cpp_gypi, 'ppapi_c', 'c/[^/]*\.h')

# From ppapi_cpp.gypi:ppapi_c:c/dev/[^/]*\.h
c_dev_headers = gyp_extract.GypTargetSources(
    ppapi_cpp_gypi, 'ppapi_c', 'c/dev/[^/]*\.h')

# From ppapi_cpp.gypi:ppapi_cpp_objects:cpp/[^/]*\.h
# From ppapi_cpp.gypi:ppapi_cpp:cpp/[^/]*\.h
cpp_headers = (
    gyp_extract.GypTargetSources(
        ppapi_cpp_gypi, 'ppapi_cpp_objects', 'cpp/[^/]*\.h') +
    gyp_extract.GypTargetSources(
        ppapi_cpp_gypi, 'ppapi_cpp', 'cpp/[^/]*\.h')
)

# From ppapi_cpp.gypi:ppapi_cpp_objects:cpp/dev/[^/]*\.h
cpp_dev_headers = gyp_extract.GypTargetSources(
    ppapi_cpp_gypi, 'ppapi_cpp_objects', 'cpp/dev/[^/]*\.h')

# From ppapi_gl.gypi:ppapi_gles2:.*\.h
gles2_headers = gyp_extract.GypTargetSources(
    ppapi_gl_gypi, 'ppapi_gles2', '.*\.h')

env.AddLibraryToSdk(['ppapi_cpp'])
env.AddLibraryToSdk(['ppapi_gles2'])

