# -*- python -*-
# Copyright (c) 2011 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.


Import('env')

# TODO(robertm): get rid of this if possible
env.Append(CCFLAGS=['-fno-strict-aliasing'])

# This library is linked into irt.nexe (see src/untrusted/irt/).
# All IRT code must avoid direct use of the TLS ABI register, which
# is reserved for user TLS.  Instead, ensure all TLS accesses use a
# call to __nacl_read_tp, which the IRT code overrides to segregate
# IRT-private TLS from user TLS.
if not env.Bit('bitcode') and not env.Bit('nacl_glibc'):
  env.Append(CCFLAGS=['-mtls-use-call'])


# NOTE: keep this sync'ed with build.scons
trusted_untrusted_shared = [
    'invoke.c',
    'module_init_fini.c',
    'nacl_srpc.c',
    'nacl_srpc_message.c',
    'rpc_serialize.c',
    'rpc_service.c',
    'rpc_server_loop.c',
    'utility.c',
]

# NOTE: these files maybe candidates for a separate library
untrusted_only = [
    'accept.c',
    'accept_threaded.c']

env.ComponentLibrary('libsrpc',
                     trusted_untrusted_shared + untrusted_only)


env.AddLibraryToSdk(['libsrpc'])
header_install = env.AddHeaderToSdk(['nacl_srpc.h'])
env.Requires('libsrpc', header_install)
