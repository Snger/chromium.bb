# Copyright (c) 2008 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

Import('env')


env.Append(CPPDEFINES=['XP_UNIX'])
env.FilterOut(CCFLAGS=['-Wswitch-enum'])

# The RPCs performed by the untrusted portion of the NPAPI layer are specified
# abstractly, and proxies and stubs are generated automatically.
SRPCGEN = '${SOURCE_ROOT}/native_client/tools/srpcgen.py'
GENERATED = '${TARGET_ROOT}/gen/native_client/src/shared/npruntime'

npmodule_specinputs = ['npmodule.srpc',
                       'npobjectstub.srpc',
                       'device2d.srpc',
                       'device3d.srpc', ]

npmodule_rpc_header = GENERATED + '/npmodule_rpc.h'
npmodule_rpc_client = GENERATED + '/npmodule_rpc_client.cc'
env.Command(target=env.File(npmodule_rpc_header),
            source=[SRPCGEN, npmodule_specinputs],
            action=[Action('${PYTHON} ${SOURCES[0]}'
                           ' -o ${TARGET} -h '
                           'NPModuleRpcs '
                           'GEN_NPRUNTIME_NPMODULE_RPC_H_'
                           ' ${SOURCES[1:]}'),
                   ],
           )
env.Command(target=env.File(npmodule_rpc_client),
            source=[SRPCGEN, npmodule_specinputs],
            action=[Action('${PYTHON} ${SOURCES[0]}'
                           ' -o ${TARGET} -s '
                           'NPModuleRpcs '
                           + npmodule_rpc_header +
                           ' ${SOURCES[1:]}'),
                   ],
           )

npnavigator_specinputs = ['npnavigator.srpc',
                          'npobjectstub.srpc', ]

npnavigator_rpc_header = GENERATED + '/npnavigator_rpc.h'
npnavigator_rpc_server = GENERATED + '/npnavigator_rpc_server.cc'
env.Command(target=env.File(npnavigator_rpc_header),
            source=[SRPCGEN, npnavigator_specinputs],
            action=[Action('${PYTHON} ${SOURCES[0]}'
                           ' -o ${TARGET} -h '
                           'NPNavigatorRpcs '
                           'GEN_NPRUNTIME_NPNAVIGATOR_RPC_H_'
                           ' ${SOURCES[1:]}'),
                   ],
           )
env.Command(target=env.File(npnavigator_rpc_server),
            source=[SRPCGEN, npnavigator_specinputs],
            action=[Action('${PYTHON} ${SOURCES[0]}'
                           ' -o ${TARGET} -s '
                           'NPNavigatorRpcs '
                           + npnavigator_rpc_header +
                           ' ${SOURCES[1:]}'),
                   ],
           )

env.ComponentLibrary('google_nacl_npruntime',
                     ['device2d.cc',
                      'device3d.cc',
                      'naclnp_util.cc',
                      'npbridge.cc',
                      'npextensions.cc',
                      'npn_gate.cc',
                      'npnavigator.cc',
                      'npobject_proxy.cc',
                      'npobject_stub.cc',
                      'nprpc.cc',
                      npmodule_rpc_client,
                      npnavigator_rpc_server,
                      ])

headers = [
  'nacl_npapi.h',
  '$SOURCE_ROOT/third_party/npapi/bindings/npapi.h',
  '$SOURCE_ROOT/third_party/npapi/bindings/npruntime.h',
  '$SOURCE_ROOT/third_party/npapi/bindings/npapi_extensions.h',
  '$SOURCE_ROOT/native_client/src/third_party/npapi/files/include/npupp.h',
]

header_install = env.AddHeaderToSdk(headers)
env.AddLibraryToSdk(['google_nacl_npruntime'])

# because nacl_npapi.h imports headers from the sdk
env.Requires('google_nacl_npruntime', header_install)
