# Copyright (c) 2010 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

Import('env')

# To enable getting the generated include files and sources.
env.Append(CPPPATH=['${SOURCE_ROOT}/srpc/untrusted'])

env.Append(CPPDEFINES=['XP_UNIX'])
env.FilterOut(CCFLAGS=['-Wswitch-enum'])
env.Append(CCFLAGS=['-Wno-long-long'])

# The PPAPI RPCs are specified abstractly, and proxies and stubs are
# generated automatically with srpcgen.py through the DEPS action.
# These files can be regenerated by using 'gclient runhooks'.
GENERATED = '${SOURCE_ROOT}/srpc/untrusted/srpcgen'

ppp_rpc_cc = GENERATED + '/ppp_rpc_server.cc'
ppb_rpc_cc = GENERATED + '/ppb_rpc_client.cc'
upcall_cc = GENERATED + '/upcall_client.cc'

env.ComponentLibrary('ppruntime',
                     ['completion_callback_table.cc',
                      'object.cc',
                      'object_proxy.cc',
                      'object_serialize.cc',
                      'objectstub_rpc_impl.cc',
                      'plugin_audio.cc',
                      'plugin_audio_config.cc',
                      'plugin_buffer.cc',
                      'plugin_core.cc',
                      'plugin_file_io.cc',
                      'plugin_file_ref.cc',
                      'plugin_getinterface.cc',
                      'plugin_globals.cc',
                      'plugin_graphics_2d.cc',
                      'plugin_graphics_3d.cc',
                      'plugin_image_data.cc',
                      'plugin_instance.cc',
                      'plugin_main.cc',
                      'plugin_ppp_instance_impl.cc',
                      'plugin_resource.cc',
                      'plugin_resource_tracker.cc',
                      'plugin_url_loader.cc',
                      'plugin_url_request_info.cc',
                      'plugin_url_response_info.cc',
                      'plugin_var.cc',
                      ppb_rpc_cc,
                      ppp_rpc_cc,
                      'plugin_ppp_impl.cc',
                      upcall_cc,
                      'utility.cc',
                      ])

env.AddLibraryToSdk(['ppruntime'])
