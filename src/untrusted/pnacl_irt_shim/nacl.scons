# -*- python -*-
# Copyright (c) 2011 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

Import('env')

# This library is part of the pnacl x86-64 toolchain only, and is used
# to match the pnacl ABI to the IRT ABI.  It was necessitated by problems
# in passing structures by value on x86-64.
if not env.Bit('bitcode') or not env.Bit('target_x86_64'):
  Return()

# The library must be compiled with nacl-gcc.
nacl_gcc_env = env.PNaClGetNNaClEnv()

# Generate a 'pnacl_shim.c'
generated_file_c = nacl_gcc_env.Command(
    'pnacl_shim.c',
    (env.Glob('${SOURCE_ROOT}/ppapi/api/*.idl') +
     env.Glob('${SOURCE_ROOT}/ppapi/api/dev/*.idl') +
     env.Glob('${SOURCE_ROOT}/ppapi/generators/*.py')
     ),
    ('${PYTHON} ' +
     '${SOURCE_ROOT}/ppapi/generators/generator.py ' +
     '--srcroot=${SOURCE_ROOT}/ppapi/api ' +
     '--wnone --pnacl --pnaclshim=${TARGETS} ' +
     '${SOURCE_ROOT}/ppapi/api/*.idl ' +
     '${SOURCE_ROOT}/ppapi/api/dev/*.idl '))

pnacl_irt_shim = nacl_gcc_env.ComponentLibrary('pnacl_irt_shim', [
    generated_file_c,
    'shim_entry.c',
    'shim_ppapi.c',
    ])

# However, the library is part of the pnacl sdk (use original env).
env.AddLibraryToSdk(pnacl_irt_shim)

env.AddObjectToSdk(['libpnacl_irt_shim.a'])
