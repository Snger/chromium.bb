# -*- python -*-
# Copyright (c) 2012 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

Import('env')

# Support files for pnacl browser tests (as an unpacked chrome extension).
if not env.Bit('bitcode'):
  Return()

arch = env['TARGET_FULLARCH']

def StandardArch(arch):
  return {'x86-32': 'i686',
          'x86-64': 'x86_64',
          'arm': 'armv7'}[arch]

nacl_dir = '${SOURCE_ROOT}/native_client/'
# Figure out the input dependencies
pnacl_crx_inputs = [
    nacl_dir + 'pnacl/pnacl_packaging/pnacl_component_crx_gen.py',
    nacl_dir + 'pnacl/pnacl_packaging/pnacl_manifest_template.json']

# Depends on the static (newlib) llc and ld, along with the native libs.
translator_bin = ('${MAIN_DIR}/toolchain/pnacl_translator/%s/bin' %
                  StandardArch(arch))
pnacl_crx_inputs += env.Glob('${PNACL_ROOT}/lib-%s/*' % arch)
pnacl_crx_inputs += ['%s/llc.nexe' % translator_bin,
                     '%s/ld.nexe' % translator_bin]


# Override the IRT shim with the latest one built in scons-out.
# Otherwise, there may be a mismatch between the latest pepper headers
# and the IRT shim that we built in the toolchain tarball.
#
# We pick exactly that file for now, because the other files in
# ${LIB_DIR} are bitcode and we don't want to pollute the CRX with those.
lib_override = ''
if arch == 'x86-64':
  lib_override = ('--lib_override=%s,${LIB_DIR}/libpnacl_irt_shim.a ' % arch)
  # Add dependency.
  pnacl_crx_inputs.append(env.File('${LIB_DIR}/libpnacl_irt_shim.a'))

generated_crx = env.Command(
    # Output (a directory with a bunch of files, like manifest.json)
    env.GetPnaclExtensionNode(),
    # Inputs.
    pnacl_crx_inputs,
    # Command.
    ('${PYTHON} ${SOURCES[0]} ' +
     # Write the extension to the staging dir.
     '--dest=${STAGING_DIR} ' +
     # Override the libraries from the tarball with those in scons-out/x/lib
     lib_override +
     # Build only the unpacked extension, not zipped up files, etc.
     '-u ' +
     # Dummy version number that's probably newer than anything.
     '9999.9.9.9'))
