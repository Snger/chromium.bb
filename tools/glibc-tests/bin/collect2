#!/bin/bash
# Copyright (c) 2011 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.


function usage() {
cat 1>&2 <<END
$0: Error: these variables need to be exported:
  GLIBC_TST_STATIC_LDSCRIPT - linker script for static linking
  GLIBC_TST_NACL_TOOLCHAIN  - base toolchain directory
  GLIBC_TST_NACL_LOADER     - sel_ldr
  GLIBC_TST_COLLECT2        - real collect2 binary
END
}

if [[ ! -x "$GLIBC_TST_COLLECT2" ]]; then
  usage
  exit 101
fi
if [[ ! -f "$GLIBC_TST_STATIC_LDSCRIPT" ]]; then
  usage
  exit 102
fi
if [[ ! -x "$GLIBC_TST_NACL_LOADER" ]]; then
  usage
  exit 103
fi
if [[ ! -d "$GLIBC_TST_NACL_TOOLCHAIN" ]]; then
  usage
  exit 104
fi

# Process command-line arguments to detect -o <outfile>
# and add -T <static-linker-script> after each -static.
declare -a args
is_static=no
outfile=a.out
is_outfile=0
i=0
for arg; do
  args[$i]="$arg"
  if [[ "$arg" == "-static" ]]; then
    is_static=yes
    args[$((++i))]="-T"
    args[$((++i))]="$GLIBC_TST_STATIC_LDSCRIPT"
  fi
  ((i++))
  if [ "$is_outfile" = "1" ] ; then
    is_outfile=0
    outfile="$arg"
  elif [ "$arg" = "-o" ] ; then
    is_outfile=1
  fi
done

has_unsupported=no
readonly collect2out="/tmp/$(basename "$0")_collect2.$$.tmp"
readonly warning="warning: sigaction is not implemented and will always fail"

# Run the real collect2 binary with processed arguments.
${GLIBC_TST_COLLECT2} "${args[@]}" 2>&1 | tee "$collect2out"
if grep "$warning" "$collect2out" >/dev/null; then
  has_unsupported=yes
fi
/bin/rm -f "$collect2out"

# Replace the output file with a bash script that launches the loader.
if [ "$?" = "0" ] ; then
  if [ "${outfile:0:1}" != "/" ] ; then
    outfile="$PWD/$outfile"
  fi
  /bin/mv -f "$outfile" "$outfile.nexe"

  # Generate no-op binaries if link-time warnings gave a hint that the test does
  # not make sense in Native Client.
  if [[ "$has_unsupported" = "yes" ]]; then
    echo "#!/bin/bash" > "$outfile"
    echo "echo __sigaction__ $outfile EXCLUDED_IN_NACL 1>&2" >> "$outfile"
    echo "exit 115" >> "$outfile"
    chmod a+x "$outfile"
    exit 0
  fi

  readonly ldso="$GLIBC_TST_NACL_TOOLCHAIN"/nacl64/lib/runnable-ld.so
  readonly libs="$GLIBC_TST_NACL_TOOLCHAIN"/nacl64/lib

  if [[ "$is_static" = "yes" ]]; then
    opts="-a -c --"
  else
    opts="-a -c -- \"$ldso\" --library-path \"$libs\""
  fi
  echo "#!/bin/bash
\"$GLIBC_TST_NACL_LOADER\" $opts \"$outfile\".nexe \"\$@\"" > "$outfile"
  chmod a+x "$outfile"
  exit 0
fi
