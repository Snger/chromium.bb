# NOTE:
# progress on eliminating failures here should be recorded via
# http://code.google.com/p/nativeclient/issues/detail?id=2204
# ======================================================================
# failures in phase sel_ldr
# ======================================================================
# select function via ternary operator - looks like a complete miscompile
pr34971.c
# alignment issues using __alignof__
alloca-1.c
# setjmp/longjmp TODO
built-in-setjmp.c
# ??? (funny shenanigans with bitfields)
bitfld-5.c
bitfld-3.c
# local version of llabs overrides libc version
20021127-1.c
# va_arg structure passing codegen on arm
20030914-2.c
va-arg-4.c
# postincrement of argument in definition prototype (is that even legal?)
970217-1.c
# bad shift of a 40-bit bitfield
pr32244-1.c
# incorrect handling of wide char literal
# (it throws a warning, may just need the right flag)
wchar_t-1.c
# ======================================================================
# failures in phase translate
# ======================================================================
# llvm does not know that "fabs(x) >= 0"
20020720-1.c
# undef signal
fp-cmp-1.c
# undef signal
fp-cmp-2.c
# undef signal
fp-cmp-3.c
# undef isinfl
pr39228.c
# undef signal
20101011-1.c
# undef __builtin_va_arg_pack
va-arg-pack-1.c
# prefetch broken on ARM
builtin-prefetch-2.c
# vector broken on ARM
simd-6.c
# uses __builtin_return_address (llc assert binary operator types.
# perhaps __builtin_return_address does not have the right type on x8664?)
20030323-1.c
20010122-1.c
# DCE not performed at -O0 (wontfix?)
medce-1.c
fp-cmp-7.c
# ======================================================================
# failures in phase compile-bc
# ======================================================================
# undefined reference to conjf (from builtin_conjf; should work?)
20020411-1.c
# unknown builtin __builtin_malloc (wontfix?)
20071018-1.c
20071120-1.c
pr36765.c
pr43008.c
# ======================================================================
# additional failures at -O3
# ======================================================================
# uses  __builtin_constant_p
bcp-1.c
# uses __builtin_constant_p
builtin-constant.c
# llvm does not know how to evaluate "(x<y) && (x>y)" and "(x==y) && (x!=y)"
compare-fp-3.c
# ======================================================================
# wont fixes - misc reasons
# ======================================================================
# fields must have a constant size: 'variable length array in structure'
# extension will never be supported
20070919-1.c
20020412-1.c
20040308-1.c
20040423-1.c
20041218-2.c
align-nest.c
pr41935.c
# mode attribute only supported for integer and float types
20050107-1.c
20050119-1.c
20050119-2.c
simd-1.c
pr23135.c
# asm - invalid output constraint =t (is apparently undocumented in gcc)
990413-2.c
# main() declared as void (error in clang, not in gcc)
20091229-1.c
# <scumbagsteve> implicit return type int
# does not return a value </scumbagsteve> (error only in clang)
920728-1.c
# __builtin_nan result is not a compile-time constant
builtin-nan-1.c
# __builtin_apply and friends not supported by clang
pr47237.c
# ======================================================================
# wont fixes - nested functions
# ======================================================================
# nested function
nest-align-1.c
# nested function
nest-stdar-1.c
# nested function
nestfunc-7.c
# nested function
pr22061-3.c
# nested function
pr22061-4.c
# nested function
20010209-1.c
# nested function
20010605-1.c
# nested function
20090219-1.c
# nested function
920612-2.c
# nested function
921017-1.c
# nested function
20030501-1.c
# nested function
20040520-1.c
# nested function
20061220-1.c

# ======================================================================
# wont fixes - complex va_arg (e.g. structs passed as va_args)
# ======================================================================
# complex va_arg
920625-1.c
# complex va_arg
920908-1.c
# complex va_arg
931004-10.c
# complex va_arg
931004-12.c
# complex va_arg
931004-14.c
# complex va_arg
931004-2.c
# complex va_arg
931004-4.c
# complex va_arg
931004-6.c
# complex va_arg
931004-8.c
# complex va_arg
pr38151.c
# complex va_arg
stdarg-3.c
# complex va_arg
strct-stdarg-1.c
# complex va_arg
strct-varg-1.c
# complex va_arg
va-arg-22.c
# complex va_arg
pr44575.c
